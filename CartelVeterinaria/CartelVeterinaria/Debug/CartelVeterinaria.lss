
CartelVeterinaria.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000e58  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000de4  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000a2  00800100  00800100  00000e58  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000e58  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000e88  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000138  00000000  00000000  00000ec8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002240  00000000  00000000  00001000  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d8a  00000000  00000000  00003240  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001016  00000000  00000000  00003fca  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000304  00000000  00000000  00004fe0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000091f  00000000  00000000  000052e4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001169  00000000  00000000  00005c03  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000d8  00000000  00000000  00006d6c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 5d 00 	jmp	0xba	; 0xba <__ctors_end>
   4:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
   8:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
   c:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
  10:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
  14:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
  18:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
  1c:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
  20:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
  24:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
  28:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
  2c:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
  30:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
  34:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
  38:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
  3c:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
  40:	0c 94 10 05 	jmp	0xa20	; 0xa20 <__vector_16>
  44:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
  48:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
  4c:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
  50:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
  54:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
  58:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
  5c:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
  60:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
  64:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>

00000068 <__trampolines_end>:
  68:	00 00       	nop
  6a:	00 08       	sbc	r0, r0
  6c:	00 02       	muls	r16, r16
  6e:	01 00       	.word	0x0001	; ????
  70:	00 03       	mulsu	r16, r16
  72:	04 07       	cpc	r16, r20
	...

0000007c <digital_pin_to_bit_mask_PGM>:
  7c:	01 02 04 08 10 20 40 80 01 02 04 08 10 20 01 02     ..... @...... ..
  8c:	04 08 10 20                                         ... 

00000090 <digital_pin_to_port_PGM>:
  90:	04 04 04 04 04 04 04 04 02 02 02 02 02 02 03 03     ................
  a0:	03 03 03 03                                         ....

000000a4 <port_to_output_PGM>:
  a4:	00 00 00 00 25 00 28 00 2b 00                       ....%.(.+.

000000ae <port_to_mode_PGM>:
  ae:	00 00 00 00 24 00 27 00 2a 00                       ....$.'.*.

000000b8 <__ctors_start>:
  b8:	16 02       	muls	r17, r22

000000ba <__ctors_end>:
  ba:	11 24       	eor	r1, r1
  bc:	1f be       	out	0x3f, r1	; 63
  be:	cf ef       	ldi	r28, 0xFF	; 255
  c0:	d8 e0       	ldi	r29, 0x08	; 8
  c2:	de bf       	out	0x3e, r29	; 62
  c4:	cd bf       	out	0x3d, r28	; 61

000000c6 <__do_copy_data>:
  c6:	11 e0       	ldi	r17, 0x01	; 1
  c8:	a0 e0       	ldi	r26, 0x00	; 0
  ca:	b1 e0       	ldi	r27, 0x01	; 1
  cc:	e4 ee       	ldi	r30, 0xE4	; 228
  ce:	fd e0       	ldi	r31, 0x0D	; 13
  d0:	02 c0       	rjmp	.+4      	; 0xd6 <__do_copy_data+0x10>
  d2:	05 90       	lpm	r0, Z+
  d4:	0d 92       	st	X+, r0
  d6:	a0 30       	cpi	r26, 0x00	; 0
  d8:	b1 07       	cpc	r27, r17
  da:	d9 f7       	brne	.-10     	; 0xd2 <__do_copy_data+0xc>

000000dc <__do_clear_bss>:
  dc:	21 e0       	ldi	r18, 0x01	; 1
  de:	a0 e0       	ldi	r26, 0x00	; 0
  e0:	b1 e0       	ldi	r27, 0x01	; 1
  e2:	01 c0       	rjmp	.+2      	; 0xe6 <.do_clear_bss_start>

000000e4 <.do_clear_bss_loop>:
  e4:	1d 92       	st	X+, r1

000000e6 <.do_clear_bss_start>:
  e6:	a2 3a       	cpi	r26, 0xA2	; 162
  e8:	b2 07       	cpc	r27, r18
  ea:	e1 f7       	brne	.-8      	; 0xe4 <.do_clear_bss_loop>

000000ec <__do_global_ctors>:
  ec:	10 e0       	ldi	r17, 0x00	; 0
  ee:	cd e5       	ldi	r28, 0x5D	; 93
  f0:	d0 e0       	ldi	r29, 0x00	; 0
  f2:	04 c0       	rjmp	.+8      	; 0xfc <__do_global_ctors+0x10>
  f4:	21 97       	sbiw	r28, 0x01	; 1
  f6:	fe 01       	movw	r30, r28
  f8:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <__tablejump2__>
  fc:	cc 35       	cpi	r28, 0x5C	; 92
  fe:	d1 07       	cpc	r29, r17
 100:	c9 f7       	brne	.-14     	; 0xf4 <__do_global_ctors+0x8>
 102:	0e 94 01 05 	call	0xa02	; 0xa02 <main>
 106:	0c 94 f0 06 	jmp	0xde0	; 0xde0 <_exit>

0000010a <__bad_interrupt>:
 10a:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000010e <_ZN12osciladorPWM7oscilarEv>:
		
		
		
	}
	
	void oscilar(){
 10e:	8f 92       	push	r8
 110:	9f 92       	push	r9
 112:	af 92       	push	r10
 114:	bf 92       	push	r11
 116:	cf 92       	push	r12
 118:	df 92       	push	r13
 11a:	ef 92       	push	r14
 11c:	ff 92       	push	r15
 11e:	0f 93       	push	r16
 120:	1f 93       	push	r17
 122:	cf 93       	push	r28
 124:	df 93       	push	r29
 126:	ec 01       	movw	r28, r24
		t++;
 128:	ca 84       	ldd	r12, Y+10	; 0x0a
 12a:	db 84       	ldd	r13, Y+11	; 0x0b
 12c:	8f ef       	ldi	r24, 0xFF	; 255
 12e:	c8 1a       	sub	r12, r24
 130:	d8 0a       	sbc	r13, r24
 132:	db 86       	std	Y+11, r13	; 0x0b
 134:	ca 86       	std	Y+10, r12	; 0x0a
			t=0;
		}
	}
	
	unsigned char funcion(){
		if (t<=t0){
 136:	08 81       	ld	r16, Y
 138:	19 81       	ldd	r17, Y+1	; 0x01
 13a:	0c 15       	cp	r16, r12
 13c:	1d 05       	cpc	r17, r13
 13e:	0c f0       	brlt	.+2      	; 0x142 <_ZN12osciladorPWM7oscilarEv+0x34>
 140:	59 c0       	rjmp	.+178    	; 0x1f4 <_ZN12osciladorPWM7oscilarEv+0xe6>
			return 0;
		}
		else if(t>t0 && t<=t1){
 142:	6a 81       	ldd	r22, Y+2	; 0x02
 144:	7b 81       	ldd	r23, Y+3	; 0x03
 146:	6c 15       	cp	r22, r12
 148:	7d 05       	cpc	r23, r13
 14a:	14 f1       	brlt	.+68     	; 0x190 <_ZN12osciladorPWM7oscilarEv+0x82>
			float aux = (PWM_MAX / (t1-t0)) * (t-t0);
			return (unsigned char)aux;
 14c:	60 1b       	sub	r22, r16
 14e:	71 0b       	sbc	r23, r17
 150:	07 2e       	mov	r0, r23
 152:	00 0c       	add	r0, r0
 154:	88 0b       	sbc	r24, r24
 156:	99 0b       	sbc	r25, r25
 158:	0e 94 07 04 	call	0x80e	; 0x80e <__floatsisf>
 15c:	9b 01       	movw	r18, r22
 15e:	ac 01       	movw	r20, r24
 160:	6c 85       	ldd	r22, Y+12	; 0x0c
 162:	7d 85       	ldd	r23, Y+13	; 0x0d
 164:	8e 85       	ldd	r24, Y+14	; 0x0e
 166:	9f 85       	ldd	r25, Y+15	; 0x0f
 168:	0e 94 64 03 	call	0x6c8	; 0x6c8 <__divsf3>
 16c:	4b 01       	movw	r8, r22
 16e:	5c 01       	movw	r10, r24
 170:	b6 01       	movw	r22, r12
 172:	60 1b       	sub	r22, r16
 174:	71 0b       	sbc	r23, r17
 176:	07 2e       	mov	r0, r23
 178:	00 0c       	add	r0, r0
 17a:	88 0b       	sbc	r24, r24
 17c:	99 0b       	sbc	r25, r25
 17e:	0e 94 07 04 	call	0x80e	; 0x80e <__floatsisf>
 182:	9b 01       	movw	r18, r22
 184:	ac 01       	movw	r20, r24
 186:	c5 01       	movw	r24, r10
 188:	b4 01       	movw	r22, r8
 18a:	0e 94 93 04 	call	0x926	; 0x926 <__mulsf3>
 18e:	2f c0       	rjmp	.+94     	; 0x1ee <_ZN12osciladorPWM7oscilarEv+0xe0>
		}
		else if(t>t1 && t<=t2){
 190:	0c 81       	ldd	r16, Y+4	; 0x04
 192:	1d 81       	ldd	r17, Y+5	; 0x05
 194:	0c 15       	cp	r16, r12
 196:	1d 05       	cpc	r17, r13
 198:	2c f0       	brlt	.+10     	; 0x1a4 <_ZN12osciladorPWM7oscilarEv+0x96>
			return PWM_MAX;
 19a:	6c 85       	ldd	r22, Y+12	; 0x0c
 19c:	7d 85       	ldd	r23, Y+13	; 0x0d
 19e:	8e 85       	ldd	r24, Y+14	; 0x0e
 1a0:	9f 85       	ldd	r25, Y+15	; 0x0f
 1a2:	25 c0       	rjmp	.+74     	; 0x1ee <_ZN12osciladorPWM7oscilarEv+0xe0>
		}
		else if(t>t2 && t<=t3){
 1a4:	ee 80       	ldd	r14, Y+6	; 0x06
 1a6:	ff 80       	ldd	r15, Y+7	; 0x07
 1a8:	ec 14       	cp	r14, r12
 1aa:	fd 04       	cpc	r15, r13
 1ac:	1c f1       	brlt	.+70     	; 0x1f4 <_ZN12osciladorPWM7oscilarEv+0xe6>
			float aux = (PWM_MAX * (t-t3)) / (t2-t3);
			return (unsigned char)aux;
 1ae:	b6 01       	movw	r22, r12
 1b0:	6e 19       	sub	r22, r14
 1b2:	7f 09       	sbc	r23, r15
 1b4:	07 2e       	mov	r0, r23
 1b6:	00 0c       	add	r0, r0
 1b8:	88 0b       	sbc	r24, r24
 1ba:	99 0b       	sbc	r25, r25
 1bc:	0e 94 07 04 	call	0x80e	; 0x80e <__floatsisf>
 1c0:	2c 85       	ldd	r18, Y+12	; 0x0c
 1c2:	3d 85       	ldd	r19, Y+13	; 0x0d
 1c4:	4e 85       	ldd	r20, Y+14	; 0x0e
 1c6:	5f 85       	ldd	r21, Y+15	; 0x0f
 1c8:	0e 94 93 04 	call	0x926	; 0x926 <__mulsf3>
 1cc:	4b 01       	movw	r8, r22
 1ce:	5c 01       	movw	r10, r24
 1d0:	b8 01       	movw	r22, r16
 1d2:	6e 19       	sub	r22, r14
 1d4:	7f 09       	sbc	r23, r15
 1d6:	07 2e       	mov	r0, r23
 1d8:	00 0c       	add	r0, r0
 1da:	88 0b       	sbc	r24, r24
 1dc:	99 0b       	sbc	r25, r25
 1de:	0e 94 07 04 	call	0x80e	; 0x80e <__floatsisf>
 1e2:	9b 01       	movw	r18, r22
 1e4:	ac 01       	movw	r20, r24
 1e6:	c5 01       	movw	r24, r10
 1e8:	b4 01       	movw	r22, r8
 1ea:	0e 94 64 03 	call	0x6c8	; 0x6c8 <__divsf3>
 1ee:	0e 94 d6 03 	call	0x7ac	; 0x7ac <__fixunssfsi>
 1f2:	01 c0       	rjmp	.+2      	; 0x1f6 <_ZN12osciladorPWM7oscilarEv+0xe8>
		}
		else if(t>t3){
			return 0;
 1f4:	60 e0       	ldi	r22, 0x00	; 0
		
	}
	
	void oscilar(){
		t++;
		analogWrite(pin,funcion());
 1f6:	70 e0       	ldi	r23, 0x00	; 0
 1f8:	88 89       	ldd	r24, Y+16	; 0x10
 1fa:	0e 94 f6 05 	call	0xbec	; 0xbec <analogWrite>
		if (t>t4){
 1fe:	2a 85       	ldd	r18, Y+10	; 0x0a
 200:	3b 85       	ldd	r19, Y+11	; 0x0b
 202:	88 85       	ldd	r24, Y+8	; 0x08
 204:	99 85       	ldd	r25, Y+9	; 0x09
 206:	82 17       	cp	r24, r18
 208:	93 07       	cpc	r25, r19
 20a:	14 f4       	brge	.+4      	; 0x210 <_ZN12osciladorPWM7oscilarEv+0x102>
			t=0;
 20c:	1b 86       	std	Y+11, r1	; 0x0b
 20e:	1a 86       	std	Y+10, r1	; 0x0a
		}
	}
 210:	df 91       	pop	r29
 212:	cf 91       	pop	r28
 214:	1f 91       	pop	r17
 216:	0f 91       	pop	r16
 218:	ff 90       	pop	r15
 21a:	ef 90       	pop	r14
 21c:	df 90       	pop	r13
 21e:	cf 90       	pop	r12
 220:	bf 90       	pop	r11
 222:	af 90       	pop	r10
 224:	9f 90       	pop	r9
 226:	8f 90       	pop	r8
 228:	08 95       	ret

0000022a <setup>:
osciladorPWM PWM7c = osciladorPWM(circ,255,0,400,200,400,400);


void setup() {
	//GPIO
	pinMode(cruz1,OUTPUT);
 22a:	61 e0       	ldi	r22, 0x01	; 1
 22c:	85 e0       	ldi	r24, 0x05	; 5
 22e:	0e 94 7e 06 	call	0xcfc	; 0xcfc <pinMode>
	pinMode(cruz2,OUTPUT);
 232:	61 e0       	ldi	r22, 0x01	; 1
 234:	86 e0       	ldi	r24, 0x06	; 6
 236:	0e 94 7e 06 	call	0xcfc	; 0xcfc <pinMode>
	pinMode(circ,OUTPUT);
 23a:	61 e0       	ldi	r22, 0x01	; 1
 23c:	83 e0       	ldi	r24, 0x03	; 3
 23e:	0e 94 7e 06 	call	0xcfc	; 0xcfc <pinMode>
	//PCICR = 0x02;	//Habilita las interrupciones por cambio desde A0 a A5
	//PCMSK1 = 0x0F;	//Habilita las interrupciones de A0:A4
	
	
	
	digitalWrite(cruz1,LOW);
 242:	60 e0       	ldi	r22, 0x00	; 0
 244:	85 e0       	ldi	r24, 0x05	; 5
 246:	0e 94 ba 06 	call	0xd74	; 0xd74 <digitalWrite>
	digitalWrite(cruz2,LOW);
 24a:	60 e0       	ldi	r22, 0x00	; 0
 24c:	86 e0       	ldi	r24, 0x06	; 6
 24e:	0e 94 ba 06 	call	0xd74	; 0xd74 <digitalWrite>
	digitalWrite(circ,LOW);
 252:	60 e0       	ldi	r22, 0x00	; 0
 254:	83 e0       	ldi	r24, 0x03	; 3
 256:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <digitalWrite>

0000025a <loop>:
}

void loop() {
 25a:	cf 93       	push	r28
 25c:	df 93       	push	r29
		//while(1);
	//}
	
	
	//Modo 0
	digitalWrite(circ,HIGH);
 25e:	61 e0       	ldi	r22, 0x01	; 1
 260:	83 e0       	ldi	r24, 0x03	; 3
 262:	0e 94 ba 06 	call	0xd74	; 0xd74 <digitalWrite>
	digitalWrite(cruz1,HIGH);
 266:	61 e0       	ldi	r22, 0x01	; 1
 268:	85 e0       	ldi	r24, 0x05	; 5
 26a:	0e 94 ba 06 	call	0xd74	; 0xd74 <digitalWrite>
	digitalWrite(cruz2,HIGH);
 26e:	61 e0       	ldi	r22, 0x01	; 1
 270:	86 e0       	ldi	r24, 0x06	; 6
 272:	0e 94 ba 06 	call	0xd74	; 0xd74 <digitalWrite>
	delay(5000);
 276:	68 e8       	ldi	r22, 0x88	; 136
 278:	73 e1       	ldi	r23, 0x13	; 19
 27a:	80 e0       	ldi	r24, 0x00	; 0
 27c:	90 e0       	ldi	r25, 0x00	; 0
 27e:	0e 94 7f 05 	call	0xafe	; 0xafe <delay>
 282:	c5 e0       	ldi	r28, 0x05	; 5
 284:	d0 e0       	ldi	r29, 0x00	; 0
	
	//Modo 1
	for(int i=0; i<5;i++){
		digitalWrite(cruz1,LOW);
 286:	60 e0       	ldi	r22, 0x00	; 0
 288:	85 e0       	ldi	r24, 0x05	; 5
 28a:	0e 94 ba 06 	call	0xd74	; 0xd74 <digitalWrite>
		delay(200);
 28e:	68 ec       	ldi	r22, 0xC8	; 200
 290:	70 e0       	ldi	r23, 0x00	; 0
 292:	80 e0       	ldi	r24, 0x00	; 0
 294:	90 e0       	ldi	r25, 0x00	; 0
 296:	0e 94 7f 05 	call	0xafe	; 0xafe <delay>
		digitalWrite(cruz2,LOW);
 29a:	60 e0       	ldi	r22, 0x00	; 0
 29c:	86 e0       	ldi	r24, 0x06	; 6
 29e:	0e 94 ba 06 	call	0xd74	; 0xd74 <digitalWrite>
		delay(200);
 2a2:	68 ec       	ldi	r22, 0xC8	; 200
 2a4:	70 e0       	ldi	r23, 0x00	; 0
 2a6:	80 e0       	ldi	r24, 0x00	; 0
 2a8:	90 e0       	ldi	r25, 0x00	; 0
 2aa:	0e 94 7f 05 	call	0xafe	; 0xafe <delay>
		digitalWrite(circ,LOW);
 2ae:	60 e0       	ldi	r22, 0x00	; 0
 2b0:	83 e0       	ldi	r24, 0x03	; 3
 2b2:	0e 94 ba 06 	call	0xd74	; 0xd74 <digitalWrite>
		delay(200);
 2b6:	68 ec       	ldi	r22, 0xC8	; 200
 2b8:	70 e0       	ldi	r23, 0x00	; 0
 2ba:	80 e0       	ldi	r24, 0x00	; 0
 2bc:	90 e0       	ldi	r25, 0x00	; 0
 2be:	0e 94 7f 05 	call	0xafe	; 0xafe <delay>
		digitalWrite(cruz1,HIGH);
 2c2:	61 e0       	ldi	r22, 0x01	; 1
 2c4:	85 e0       	ldi	r24, 0x05	; 5
 2c6:	0e 94 ba 06 	call	0xd74	; 0xd74 <digitalWrite>
		delay(200);
 2ca:	68 ec       	ldi	r22, 0xC8	; 200
 2cc:	70 e0       	ldi	r23, 0x00	; 0
 2ce:	80 e0       	ldi	r24, 0x00	; 0
 2d0:	90 e0       	ldi	r25, 0x00	; 0
 2d2:	0e 94 7f 05 	call	0xafe	; 0xafe <delay>
		digitalWrite(cruz2,HIGH);
 2d6:	61 e0       	ldi	r22, 0x01	; 1
 2d8:	86 e0       	ldi	r24, 0x06	; 6
 2da:	0e 94 ba 06 	call	0xd74	; 0xd74 <digitalWrite>
		delay(200);
 2de:	68 ec       	ldi	r22, 0xC8	; 200
 2e0:	70 e0       	ldi	r23, 0x00	; 0
 2e2:	80 e0       	ldi	r24, 0x00	; 0
 2e4:	90 e0       	ldi	r25, 0x00	; 0
 2e6:	0e 94 7f 05 	call	0xafe	; 0xafe <delay>
		digitalWrite(circ,HIGH);
 2ea:	61 e0       	ldi	r22, 0x01	; 1
 2ec:	83 e0       	ldi	r24, 0x03	; 3
 2ee:	0e 94 ba 06 	call	0xd74	; 0xd74 <digitalWrite>
		delay(200);
 2f2:	68 ec       	ldi	r22, 0xC8	; 200
 2f4:	70 e0       	ldi	r23, 0x00	; 0
 2f6:	80 e0       	ldi	r24, 0x00	; 0
 2f8:	90 e0       	ldi	r25, 0x00	; 0
 2fa:	0e 94 7f 05 	call	0xafe	; 0xafe <delay>
 2fe:	21 97       	sbiw	r28, 0x01	; 1
	digitalWrite(cruz1,HIGH);
	digitalWrite(cruz2,HIGH);
	delay(5000);
	
	//Modo 1
	for(int i=0; i<5;i++){
 300:	11 f6       	brne	.-124    	; 0x286 <loop+0x2c>
 302:	cc e0       	ldi	r28, 0x0C	; 12
 304:	d0 e0       	ldi	r29, 0x00	; 0
		delay(200);
	}
	
	//Modo 2
	for(int i=0;i<12;i++){
		digitalWrite(cruz1,LOW);
 306:	60 e0       	ldi	r22, 0x00	; 0
 308:	85 e0       	ldi	r24, 0x05	; 5
 30a:	0e 94 ba 06 	call	0xd74	; 0xd74 <digitalWrite>
		delay(200);
 30e:	68 ec       	ldi	r22, 0xC8	; 200
 310:	70 e0       	ldi	r23, 0x00	; 0
 312:	80 e0       	ldi	r24, 0x00	; 0
 314:	90 e0       	ldi	r25, 0x00	; 0
 316:	0e 94 7f 05 	call	0xafe	; 0xafe <delay>
		digitalWrite(cruz1,HIGH);
 31a:	61 e0       	ldi	r22, 0x01	; 1
 31c:	85 e0       	ldi	r24, 0x05	; 5
 31e:	0e 94 ba 06 	call	0xd74	; 0xd74 <digitalWrite>
		delay(200);
 322:	68 ec       	ldi	r22, 0xC8	; 200
 324:	70 e0       	ldi	r23, 0x00	; 0
 326:	80 e0       	ldi	r24, 0x00	; 0
 328:	90 e0       	ldi	r25, 0x00	; 0
 32a:	0e 94 7f 05 	call	0xafe	; 0xafe <delay>
 32e:	21 97       	sbiw	r28, 0x01	; 1
		digitalWrite(circ,HIGH);
		delay(200);
	}
	
	//Modo 2
	for(int i=0;i<12;i++){
 330:	51 f7       	brne	.-44     	; 0x306 <loop+0xac>
 332:	cc e0       	ldi	r28, 0x0C	; 12
 334:	d0 e0       	ldi	r29, 0x00	; 0
		delay(200);
	}
	
	//Modo 3
	for(int i=0;i<12;i++){
		digitalWrite(cruz2,LOW);
 336:	60 e0       	ldi	r22, 0x00	; 0
 338:	86 e0       	ldi	r24, 0x06	; 6
 33a:	0e 94 ba 06 	call	0xd74	; 0xd74 <digitalWrite>
		delay(200);
 33e:	68 ec       	ldi	r22, 0xC8	; 200
 340:	70 e0       	ldi	r23, 0x00	; 0
 342:	80 e0       	ldi	r24, 0x00	; 0
 344:	90 e0       	ldi	r25, 0x00	; 0
 346:	0e 94 7f 05 	call	0xafe	; 0xafe <delay>
		digitalWrite(cruz2,HIGH);
 34a:	61 e0       	ldi	r22, 0x01	; 1
 34c:	86 e0       	ldi	r24, 0x06	; 6
 34e:	0e 94 ba 06 	call	0xd74	; 0xd74 <digitalWrite>
		delay(200);
 352:	68 ec       	ldi	r22, 0xC8	; 200
 354:	70 e0       	ldi	r23, 0x00	; 0
 356:	80 e0       	ldi	r24, 0x00	; 0
 358:	90 e0       	ldi	r25, 0x00	; 0
 35a:	0e 94 7f 05 	call	0xafe	; 0xafe <delay>
 35e:	21 97       	sbiw	r28, 0x01	; 1
		digitalWrite(cruz1,HIGH);
		delay(200);
	}
	
	//Modo 3
	for(int i=0;i<12;i++){
 360:	51 f7       	brne	.-44     	; 0x336 <loop+0xdc>
 362:	cc e0       	ldi	r28, 0x0C	; 12
 364:	d0 e0       	ldi	r29, 0x00	; 0
		delay(200);
	}
	
	//Modo 4
	for(int i=0;i<12;i++){
		digitalWrite(cruz1,LOW);
 366:	60 e0       	ldi	r22, 0x00	; 0
 368:	85 e0       	ldi	r24, 0x05	; 5
 36a:	0e 94 ba 06 	call	0xd74	; 0xd74 <digitalWrite>
		digitalWrite(cruz2,LOW);
 36e:	60 e0       	ldi	r22, 0x00	; 0
 370:	86 e0       	ldi	r24, 0x06	; 6
 372:	0e 94 ba 06 	call	0xd74	; 0xd74 <digitalWrite>
		//digitalWrite(circ,LOW);
		delay(500);
 376:	64 ef       	ldi	r22, 0xF4	; 244
 378:	71 e0       	ldi	r23, 0x01	; 1
 37a:	80 e0       	ldi	r24, 0x00	; 0
 37c:	90 e0       	ldi	r25, 0x00	; 0
 37e:	0e 94 7f 05 	call	0xafe	; 0xafe <delay>
		digitalWrite(cruz1,HIGH);
 382:	61 e0       	ldi	r22, 0x01	; 1
 384:	85 e0       	ldi	r24, 0x05	; 5
 386:	0e 94 ba 06 	call	0xd74	; 0xd74 <digitalWrite>
		digitalWrite(cruz2,HIGH);
 38a:	61 e0       	ldi	r22, 0x01	; 1
 38c:	86 e0       	ldi	r24, 0x06	; 6
 38e:	0e 94 ba 06 	call	0xd74	; 0xd74 <digitalWrite>
		//digitalWrite(circ,HIGH);
		delay(500);
 392:	64 ef       	ldi	r22, 0xF4	; 244
 394:	71 e0       	ldi	r23, 0x01	; 1
 396:	80 e0       	ldi	r24, 0x00	; 0
 398:	90 e0       	ldi	r25, 0x00	; 0
 39a:	0e 94 7f 05 	call	0xafe	; 0xafe <delay>
 39e:	21 97       	sbiw	r28, 0x01	; 1
		digitalWrite(cruz2,HIGH);
		delay(200);
	}
	
	//Modo 4
	for(int i=0;i<12;i++){
 3a0:	11 f7       	brne	.-60     	; 0x366 <loop+0x10c>
 3a2:	c0 e1       	ldi	r28, 0x10	; 16
 3a4:	d7 e2       	ldi	r29, 0x27	; 39
	}


	//Modo 5
	for(int i=0;i<10000;i++){
		PWM5a.oscilar();
 3a6:	88 e8       	ldi	r24, 0x88	; 136
 3a8:	91 e0       	ldi	r25, 0x01	; 1
 3aa:	0e 94 87 00 	call	0x10e	; 0x10e <_ZN12osciladorPWM7oscilarEv>
		PWM5b.oscilar();
 3ae:	87 e7       	ldi	r24, 0x77	; 119
 3b0:	91 e0       	ldi	r25, 0x01	; 1
 3b2:	0e 94 87 00 	call	0x10e	; 0x10e <_ZN12osciladorPWM7oscilarEv>
		PWM5c.oscilar();
 3b6:	86 e6       	ldi	r24, 0x66	; 102
 3b8:	91 e0       	ldi	r25, 0x01	; 1
 3ba:	0e 94 87 00 	call	0x10e	; 0x10e <_ZN12osciladorPWM7oscilarEv>
		delay(1);
 3be:	61 e0       	ldi	r22, 0x01	; 1
 3c0:	70 e0       	ldi	r23, 0x00	; 0
 3c2:	80 e0       	ldi	r24, 0x00	; 0
 3c4:	90 e0       	ldi	r25, 0x00	; 0
 3c6:	0e 94 7f 05 	call	0xafe	; 0xafe <delay>
 3ca:	21 97       	sbiw	r28, 0x01	; 1
		delay(500);
	}


	//Modo 5
	for(int i=0;i<10000;i++){
 3cc:	61 f7       	brne	.-40     	; 0x3a6 <loop+0x14c>
 3ce:	c0 e1       	ldi	r28, 0x10	; 16
 3d0:	d7 e2       	ldi	r29, 0x27	; 39
		delay(1);
	}
	
	//Modo 6
	for(int i=0;i<10000;i++){
		PWM6a.oscilar();
 3d2:	85 e5       	ldi	r24, 0x55	; 85
 3d4:	91 e0       	ldi	r25, 0x01	; 1
 3d6:	0e 94 87 00 	call	0x10e	; 0x10e <_ZN12osciladorPWM7oscilarEv>
		PWM6b.oscilar();
 3da:	84 e4       	ldi	r24, 0x44	; 68
 3dc:	91 e0       	ldi	r25, 0x01	; 1
 3de:	0e 94 87 00 	call	0x10e	; 0x10e <_ZN12osciladorPWM7oscilarEv>
		PWM6c.oscilar();
 3e2:	83 e3       	ldi	r24, 0x33	; 51
 3e4:	91 e0       	ldi	r25, 0x01	; 1
 3e6:	0e 94 87 00 	call	0x10e	; 0x10e <_ZN12osciladorPWM7oscilarEv>
		delay(1);
 3ea:	61 e0       	ldi	r22, 0x01	; 1
 3ec:	70 e0       	ldi	r23, 0x00	; 0
 3ee:	80 e0       	ldi	r24, 0x00	; 0
 3f0:	90 e0       	ldi	r25, 0x00	; 0
 3f2:	0e 94 7f 05 	call	0xafe	; 0xafe <delay>
 3f6:	21 97       	sbiw	r28, 0x01	; 1
		PWM5c.oscilar();
		delay(1);
	}
	
	//Modo 6
	for(int i=0;i<10000;i++){
 3f8:	61 f7       	brne	.-40     	; 0x3d2 <loop+0x178>
 3fa:	c0 e1       	ldi	r28, 0x10	; 16
 3fc:	d7 e2       	ldi	r29, 0x27	; 39
		delay(1);
	}
	
	//Modo 5
	for(int i=0;i<10000;i++){
		PWM7a.oscilar();
 3fe:	82 e2       	ldi	r24, 0x22	; 34
 400:	91 e0       	ldi	r25, 0x01	; 1
 402:	0e 94 87 00 	call	0x10e	; 0x10e <_ZN12osciladorPWM7oscilarEv>
		PWM7b.oscilar();
 406:	81 e1       	ldi	r24, 0x11	; 17
 408:	91 e0       	ldi	r25, 0x01	; 1
 40a:	0e 94 87 00 	call	0x10e	; 0x10e <_ZN12osciladorPWM7oscilarEv>
		PWM7c.oscilar();
 40e:	80 e0       	ldi	r24, 0x00	; 0
 410:	91 e0       	ldi	r25, 0x01	; 1
 412:	0e 94 87 00 	call	0x10e	; 0x10e <_ZN12osciladorPWM7oscilarEv>
		delay(1);
 416:	61 e0       	ldi	r22, 0x01	; 1
 418:	70 e0       	ldi	r23, 0x00	; 0
 41a:	80 e0       	ldi	r24, 0x00	; 0
 41c:	90 e0       	ldi	r25, 0x00	; 0
 41e:	0e 94 7f 05 	call	0xafe	; 0xafe <delay>
 422:	21 97       	sbiw	r28, 0x01	; 1
		PWM6c.oscilar();
		delay(1);
	}
	
	//Modo 5
	for(int i=0;i<10000;i++){
 424:	61 f7       	brne	.-40     	; 0x3fe <loop+0x1a4>
		PWM7a.oscilar();
		PWM7b.oscilar();
		PWM7c.oscilar();
		delay(1);
	}
}
 426:	df 91       	pop	r29
 428:	cf 91       	pop	r28
 42a:	08 95       	ret

0000042c <_GLOBAL__sub_I_modo>:
 42c:	2f 92       	push	r2
 42e:	3f 92       	push	r3
 430:	4f 92       	push	r4
 432:	5f 92       	push	r5
 434:	6f 92       	push	r6
 436:	7f 92       	push	r7
 438:	8f 92       	push	r8
 43a:	9f 92       	push	r9
 43c:	af 92       	push	r10
 43e:	bf 92       	push	r11
 440:	cf 92       	push	r12
 442:	df 92       	push	r13
 444:	ef 92       	push	r14
 446:	ff 92       	push	r15
 448:	0f 93       	push	r16
 44a:	1f 93       	push	r17
 44c:	cf 93       	push	r28
 44e:	df 93       	push	r29
	|----|---|--------|------|-------|--
	   t0   t1       t2     t3      t4  
     <-------------T---------------->
	*/
	//El constructor no es void, y tiene que tener si o si el mismo nombre que la clase
	osciladorPWM(unsigned char salida, int maximo,  int dt0,  int dt1,  int dt2,  int dt3,  int dt4){
 450:	88 e8       	ldi	r24, 0x88	; 136
 452:	e8 2e       	mov	r14, r24
 454:	81 e0       	ldi	r24, 0x01	; 1
 456:	f8 2e       	mov	r15, r24
 458:	f7 01       	movw	r30, r14
 45a:	13 86       	std	Z+11, r1	; 0x0b
 45c:	12 86       	std	Z+10, r1	; 0x0a
		pin = salida;
 45e:	85 e0       	ldi	r24, 0x05	; 5
 460:	80 8b       	std	Z+16, r24	; 0x10
		pinMode(pin,OUTPUT);
 462:	61 e0       	ldi	r22, 0x01	; 1
 464:	0e 94 7e 06 	call	0xcfc	; 0xcfc <pinMode>
		PWM_MAX = maximo;
 468:	81 2c       	mov	r8, r1
 46a:	91 2c       	mov	r9, r1
 46c:	9f e7       	ldi	r25, 0x7F	; 127
 46e:	a9 2e       	mov	r10, r25
 470:	93 e4       	ldi	r25, 0x43	; 67
 472:	b9 2e       	mov	r11, r25
 474:	f7 01       	movw	r30, r14
 476:	84 86       	std	Z+12, r8	; 0x0c
 478:	95 86       	std	Z+13, r9	; 0x0d
 47a:	a6 86       	std	Z+14, r10	; 0x0e
 47c:	b7 86       	std	Z+15, r11	; 0x0f
		
		t0=dt0;
 47e:	11 82       	std	Z+1, r1	; 0x01
 480:	10 82       	st	Z, r1
		t1=t0+dt1;
 482:	c0 e9       	ldi	r28, 0x90	; 144
 484:	d1 e0       	ldi	r29, 0x01	; 1
 486:	d3 83       	std	Z+3, r29	; 0x03
 488:	c2 83       	std	Z+2, r28	; 0x02
		t2=t1+dt2;
 48a:	d5 83       	std	Z+5, r29	; 0x05
 48c:	c4 83       	std	Z+4, r28	; 0x04
		t3=t2+dt3;
 48e:	20 e2       	ldi	r18, 0x20	; 32
 490:	c2 2e       	mov	r12, r18
 492:	23 e0       	ldi	r18, 0x03	; 3
 494:	d2 2e       	mov	r13, r18
 496:	d7 82       	std	Z+7, r13	; 0x07
 498:	c6 82       	std	Z+6, r12	; 0x06
		t4=t3+dt4;
 49a:	00 e6       	ldi	r16, 0x60	; 96
 49c:	19 e0       	ldi	r17, 0x09	; 9
 49e:	11 87       	std	Z+9, r17	; 0x09
 4a0:	00 87       	std	Z+8, r16	; 0x08
		t=0;
 4a2:	13 86       	std	Z+11, r1	; 0x0b
 4a4:	12 86       	std	Z+10, r1	; 0x0a
	|----|---|--------|------|-------|--
	   t0   t1       t2     t3      t4  
     <-------------T---------------->
	*/
	//El constructor no es void, y tiene que tener si o si el mismo nombre que la clase
	osciladorPWM(unsigned char salida, int maximo,  int dt0,  int dt1,  int dt2,  int dt3,  int dt4){
 4a6:	37 e7       	ldi	r19, 0x77	; 119
 4a8:	e3 2e       	mov	r14, r19
 4aa:	31 e0       	ldi	r19, 0x01	; 1
 4ac:	f3 2e       	mov	r15, r19
 4ae:	f7 01       	movw	r30, r14
 4b0:	13 86       	std	Z+11, r1	; 0x0b
 4b2:	12 86       	std	Z+10, r1	; 0x0a
		pin = salida;
 4b4:	86 e0       	ldi	r24, 0x06	; 6
 4b6:	80 8b       	std	Z+16, r24	; 0x10
		pinMode(pin,OUTPUT);
 4b8:	61 e0       	ldi	r22, 0x01	; 1
 4ba:	0e 94 7e 06 	call	0xcfc	; 0xcfc <pinMode>
		PWM_MAX = maximo;
 4be:	f7 01       	movw	r30, r14
 4c0:	84 86       	std	Z+12, r8	; 0x0c
 4c2:	95 86       	std	Z+13, r9	; 0x0d
 4c4:	a6 86       	std	Z+14, r10	; 0x0e
 4c6:	b7 86       	std	Z+15, r11	; 0x0f
		
		t0=dt0;
 4c8:	d1 82       	std	Z+1, r13	; 0x01
 4ca:	c0 82       	st	Z, r12
		t1=t0+dt1;
 4cc:	80 eb       	ldi	r24, 0xB0	; 176
 4ce:	94 e0       	ldi	r25, 0x04	; 4
 4d0:	93 83       	std	Z+3, r25	; 0x03
 4d2:	82 83       	std	Z+2, r24	; 0x02
		t2=t1+dt2;
 4d4:	95 83       	std	Z+5, r25	; 0x05
 4d6:	84 83       	std	Z+4, r24	; 0x04
		t3=t2+dt3;
 4d8:	40 e4       	ldi	r20, 0x40	; 64
 4da:	64 2e       	mov	r6, r20
 4dc:	46 e0       	ldi	r20, 0x06	; 6
 4de:	74 2e       	mov	r7, r20
 4e0:	77 82       	std	Z+7, r7	; 0x07
 4e2:	66 82       	std	Z+6, r6	; 0x06
		t4=t3+dt4;
 4e4:	11 87       	std	Z+9, r17	; 0x09
 4e6:	00 87       	std	Z+8, r16	; 0x08
		t=0;
 4e8:	13 86       	std	Z+11, r1	; 0x0b
 4ea:	12 86       	std	Z+10, r1	; 0x0a
	|----|---|--------|------|-------|--
	   t0   t1       t2     t3      t4  
     <-------------T---------------->
	*/
	//El constructor no es void, y tiene que tener si o si el mismo nombre que la clase
	osciladorPWM(unsigned char salida, int maximo,  int dt0,  int dt1,  int dt2,  int dt3,  int dt4){
 4ec:	56 e6       	ldi	r21, 0x66	; 102
 4ee:	e5 2e       	mov	r14, r21
 4f0:	51 e0       	ldi	r21, 0x01	; 1
 4f2:	f5 2e       	mov	r15, r21
 4f4:	f7 01       	movw	r30, r14
 4f6:	13 86       	std	Z+11, r1	; 0x0b
 4f8:	12 86       	std	Z+10, r1	; 0x0a
		pin = salida;
 4fa:	83 e0       	ldi	r24, 0x03	; 3
 4fc:	80 8b       	std	Z+16, r24	; 0x10
		pinMode(pin,OUTPUT);
 4fe:	61 e0       	ldi	r22, 0x01	; 1
 500:	0e 94 7e 06 	call	0xcfc	; 0xcfc <pinMode>
		PWM_MAX = maximo;
 504:	f7 01       	movw	r30, r14
 506:	84 86       	std	Z+12, r8	; 0x0c
 508:	95 86       	std	Z+13, r9	; 0x0d
 50a:	a6 86       	std	Z+14, r10	; 0x0e
 50c:	b7 86       	std	Z+15, r11	; 0x0f
		
		t0=dt0;
 50e:	71 82       	std	Z+1, r7	; 0x01
 510:	60 82       	st	Z, r6
		t1=t0+dt1;
 512:	80 ed       	ldi	r24, 0xD0	; 208
 514:	97 e0       	ldi	r25, 0x07	; 7
 516:	93 83       	std	Z+3, r25	; 0x03
 518:	82 83       	std	Z+2, r24	; 0x02
		t2=t1+dt2;
 51a:	95 83       	std	Z+5, r25	; 0x05
 51c:	84 83       	std	Z+4, r24	; 0x04
		t3=t2+dt3;
 51e:	17 83       	std	Z+7, r17	; 0x07
 520:	06 83       	std	Z+6, r16	; 0x06
		t4=t3+dt4;
 522:	11 87       	std	Z+9, r17	; 0x09
 524:	00 87       	std	Z+8, r16	; 0x08
		t=0;
 526:	13 86       	std	Z+11, r1	; 0x0b
 528:	12 86       	std	Z+10, r1	; 0x0a
	|----|---|--------|------|-------|--
	   t0   t1       t2     t3      t4  
     <-------------T---------------->
	*/
	//El constructor no es void, y tiene que tener si o si el mismo nombre que la clase
	osciladorPWM(unsigned char salida, int maximo,  int dt0,  int dt1,  int dt2,  int dt3,  int dt4){
 52a:	05 e5       	ldi	r16, 0x55	; 85
 52c:	11 e0       	ldi	r17, 0x01	; 1
 52e:	f8 01       	movw	r30, r16
 530:	13 86       	std	Z+11, r1	; 0x0b
 532:	12 86       	std	Z+10, r1	; 0x0a
		pin = salida;
 534:	85 e0       	ldi	r24, 0x05	; 5
 536:	80 8b       	std	Z+16, r24	; 0x10
		pinMode(pin,OUTPUT);
 538:	61 e0       	ldi	r22, 0x01	; 1
 53a:	0e 94 7e 06 	call	0xcfc	; 0xcfc <pinMode>
		PWM_MAX = maximo;
 53e:	f8 01       	movw	r30, r16
 540:	84 86       	std	Z+12, r8	; 0x0c
 542:	95 86       	std	Z+13, r9	; 0x0d
 544:	a6 86       	std	Z+14, r10	; 0x0e
 546:	b7 86       	std	Z+15, r11	; 0x0f
		
		t0=dt0;
 548:	11 82       	std	Z+1, r1	; 0x01
 54a:	10 82       	st	Z, r1
		t1=t0+dt1;
 54c:	d3 83       	std	Z+3, r29	; 0x03
 54e:	c2 83       	std	Z+2, r28	; 0x02
		t2=t1+dt2;
 550:	68 e5       	ldi	r22, 0x58	; 88
 552:	46 2e       	mov	r4, r22
 554:	62 e0       	ldi	r22, 0x02	; 2
 556:	56 2e       	mov	r5, r22
 558:	55 82       	std	Z+5, r5	; 0x05
 55a:	44 82       	std	Z+4, r4	; 0x04
		t3=t2+dt3;
 55c:	78 ee       	ldi	r23, 0xE8	; 232
 55e:	e7 2e       	mov	r14, r23
 560:	73 e0       	ldi	r23, 0x03	; 3
 562:	f7 2e       	mov	r15, r23
 564:	f7 82       	std	Z+7, r15	; 0x07
 566:	e6 82       	std	Z+6, r14	; 0x06
		t4=t3+dt4;
 568:	a8 e0       	ldi	r26, 0x08	; 8
 56a:	6a 2e       	mov	r6, r26
 56c:	a7 e0       	ldi	r26, 0x07	; 7
 56e:	7a 2e       	mov	r7, r26
 570:	71 86       	std	Z+9, r7	; 0x09
 572:	60 86       	std	Z+8, r6	; 0x08
		t=0;
 574:	13 86       	std	Z+11, r1	; 0x0b
 576:	12 86       	std	Z+10, r1	; 0x0a
	|----|---|--------|------|-------|--
	   t0   t1       t2     t3      t4  
     <-------------T---------------->
	*/
	//El constructor no es void, y tiene que tener si o si el mismo nombre que la clase
	osciladorPWM(unsigned char salida, int maximo,  int dt0,  int dt1,  int dt2,  int dt3,  int dt4){
 578:	b4 e4       	ldi	r27, 0x44	; 68
 57a:	2b 2e       	mov	r2, r27
 57c:	b1 e0       	ldi	r27, 0x01	; 1
 57e:	3b 2e       	mov	r3, r27
 580:	f1 01       	movw	r30, r2
 582:	13 86       	std	Z+11, r1	; 0x0b
 584:	12 86       	std	Z+10, r1	; 0x0a
		pin = salida;
 586:	86 e0       	ldi	r24, 0x06	; 6
 588:	80 8b       	std	Z+16, r24	; 0x10
		pinMode(pin,OUTPUT);
 58a:	61 e0       	ldi	r22, 0x01	; 1
 58c:	0e 94 7e 06 	call	0xcfc	; 0xcfc <pinMode>
		PWM_MAX = maximo;
 590:	f1 01       	movw	r30, r2
 592:	84 86       	std	Z+12, r8	; 0x0c
 594:	95 86       	std	Z+13, r9	; 0x0d
 596:	a6 86       	std	Z+14, r10	; 0x0e
 598:	b7 86       	std	Z+15, r11	; 0x0f
		
		t0=dt0;
 59a:	d1 83       	std	Z+1, r29	; 0x01
 59c:	c0 83       	st	Z, r28
		t1=t0+dt1;
 59e:	d3 82       	std	Z+3, r13	; 0x03
 5a0:	c2 82       	std	Z+2, r12	; 0x02
		t2=t1+dt2;
 5a2:	f5 82       	std	Z+5, r15	; 0x05
 5a4:	e4 82       	std	Z+4, r14	; 0x04
		t3=t2+dt3;
 5a6:	08 e7       	ldi	r16, 0x78	; 120
 5a8:	15 e0       	ldi	r17, 0x05	; 5
 5aa:	17 83       	std	Z+7, r17	; 0x07
 5ac:	06 83       	std	Z+6, r16	; 0x06
		t4=t3+dt4;
 5ae:	71 86       	std	Z+9, r7	; 0x09
 5b0:	60 86       	std	Z+8, r6	; 0x08
		t=0;
 5b2:	13 86       	std	Z+11, r1	; 0x0b
 5b4:	12 86       	std	Z+10, r1	; 0x0a
	|----|---|--------|------|-------|--
	   t0   t1       t2     t3      t4  
     <-------------T---------------->
	*/
	//El constructor no es void, y tiene que tener si o si el mismo nombre que la clase
	osciladorPWM(unsigned char salida, int maximo,  int dt0,  int dt1,  int dt2,  int dt3,  int dt4){
 5b6:	83 e3       	ldi	r24, 0x33	; 51
 5b8:	28 2e       	mov	r2, r24
 5ba:	81 e0       	ldi	r24, 0x01	; 1
 5bc:	38 2e       	mov	r3, r24
 5be:	f1 01       	movw	r30, r2
 5c0:	13 86       	std	Z+11, r1	; 0x0b
 5c2:	12 86       	std	Z+10, r1	; 0x0a
		pin = salida;
 5c4:	83 e0       	ldi	r24, 0x03	; 3
 5c6:	80 8b       	std	Z+16, r24	; 0x10
		pinMode(pin,OUTPUT);
 5c8:	61 e0       	ldi	r22, 0x01	; 1
 5ca:	0e 94 7e 06 	call	0xcfc	; 0xcfc <pinMode>
		PWM_MAX = maximo;
 5ce:	f1 01       	movw	r30, r2
 5d0:	84 86       	std	Z+12, r8	; 0x0c
 5d2:	95 86       	std	Z+13, r9	; 0x0d
 5d4:	a6 86       	std	Z+14, r10	; 0x0e
 5d6:	b7 86       	std	Z+15, r11	; 0x0f
		
		t0=dt0;
 5d8:	d1 82       	std	Z+1, r13	; 0x01
 5da:	c0 82       	st	Z, r12
		t1=t0+dt1;
 5dc:	80 eb       	ldi	r24, 0xB0	; 176
 5de:	94 e0       	ldi	r25, 0x04	; 4
 5e0:	93 83       	std	Z+3, r25	; 0x03
 5e2:	82 83       	std	Z+2, r24	; 0x02
		t2=t1+dt2;
 5e4:	15 83       	std	Z+5, r17	; 0x05
 5e6:	04 83       	std	Z+4, r16	; 0x04
		t3=t2+dt3;
 5e8:	77 82       	std	Z+7, r7	; 0x07
 5ea:	66 82       	std	Z+6, r6	; 0x06
		t4=t3+dt4;
 5ec:	71 86       	std	Z+9, r7	; 0x09
 5ee:	60 86       	std	Z+8, r6	; 0x08
		t=0;
 5f0:	13 86       	std	Z+11, r1	; 0x0b
 5f2:	12 86       	std	Z+10, r1	; 0x0a
	|----|---|--------|------|-------|--
	   t0   t1       t2     t3      t4  
     <-------------T---------------->
	*/
	//El constructor no es void, y tiene que tener si o si el mismo nombre que la clase
	osciladorPWM(unsigned char salida, int maximo,  int dt0,  int dt1,  int dt2,  int dt3,  int dt4){
 5f4:	92 e2       	ldi	r25, 0x22	; 34
 5f6:	c9 2e       	mov	r12, r25
 5f8:	91 e0       	ldi	r25, 0x01	; 1
 5fa:	d9 2e       	mov	r13, r25
 5fc:	f6 01       	movw	r30, r12
 5fe:	13 86       	std	Z+11, r1	; 0x0b
 600:	12 86       	std	Z+10, r1	; 0x0a
		pin = salida;
 602:	85 e0       	ldi	r24, 0x05	; 5
 604:	80 8b       	std	Z+16, r24	; 0x10
		pinMode(pin,OUTPUT);
 606:	61 e0       	ldi	r22, 0x01	; 1
 608:	0e 94 7e 06 	call	0xcfc	; 0xcfc <pinMode>
		PWM_MAX = maximo;
 60c:	f6 01       	movw	r30, r12
 60e:	84 86       	std	Z+12, r8	; 0x0c
 610:	95 86       	std	Z+13, r9	; 0x0d
 612:	a6 86       	std	Z+14, r10	; 0x0e
 614:	b7 86       	std	Z+15, r11	; 0x0f
		
		t0=dt0;
 616:	11 82       	std	Z+1, r1	; 0x01
 618:	10 82       	st	Z, r1
		t1=t0+dt1;
 61a:	d3 83       	std	Z+3, r29	; 0x03
 61c:	c2 83       	std	Z+2, r28	; 0x02
		t2=t1+dt2;
 61e:	55 82       	std	Z+5, r5	; 0x05
 620:	44 82       	std	Z+4, r4	; 0x04
		t3=t2+dt3;
 622:	f7 82       	std	Z+7, r15	; 0x07
 624:	e6 82       	std	Z+6, r14	; 0x06
		t4=t3+dt4;
 626:	11 87       	std	Z+9, r17	; 0x09
 628:	00 87       	std	Z+8, r16	; 0x08
		t=0;
 62a:	13 86       	std	Z+11, r1	; 0x0b
 62c:	12 86       	std	Z+10, r1	; 0x0a
	|----|---|--------|------|-------|--
	   t0   t1       t2     t3      t4  
     <-------------T---------------->
	*/
	//El constructor no es void, y tiene que tener si o si el mismo nombre que la clase
	osciladorPWM(unsigned char salida, int maximo,  int dt0,  int dt1,  int dt2,  int dt3,  int dt4){
 62e:	21 e1       	ldi	r18, 0x11	; 17
 630:	c2 2e       	mov	r12, r18
 632:	21 e0       	ldi	r18, 0x01	; 1
 634:	d2 2e       	mov	r13, r18
 636:	f6 01       	movw	r30, r12
 638:	13 86       	std	Z+11, r1	; 0x0b
 63a:	12 86       	std	Z+10, r1	; 0x0a
		pin = salida;
 63c:	86 e0       	ldi	r24, 0x06	; 6
 63e:	80 8b       	std	Z+16, r24	; 0x10
		pinMode(pin,OUTPUT);
 640:	61 e0       	ldi	r22, 0x01	; 1
 642:	0e 94 7e 06 	call	0xcfc	; 0xcfc <pinMode>
		PWM_MAX = maximo;
 646:	f6 01       	movw	r30, r12
 648:	84 86       	std	Z+12, r8	; 0x0c
 64a:	95 86       	std	Z+13, r9	; 0x0d
 64c:	a6 86       	std	Z+14, r10	; 0x0e
 64e:	b7 86       	std	Z+15, r11	; 0x0f
		
		t0=dt0;
 650:	11 82       	std	Z+1, r1	; 0x01
 652:	10 82       	st	Z, r1
		t1=t0+dt1;
 654:	d3 83       	std	Z+3, r29	; 0x03
 656:	c2 83       	std	Z+2, r28	; 0x02
		t2=t1+dt2;
 658:	55 82       	std	Z+5, r5	; 0x05
 65a:	44 82       	std	Z+4, r4	; 0x04
		t3=t2+dt3;
 65c:	f7 82       	std	Z+7, r15	; 0x07
 65e:	e6 82       	std	Z+6, r14	; 0x06
		t4=t3+dt4;
 660:	11 87       	std	Z+9, r17	; 0x09
 662:	00 87       	std	Z+8, r16	; 0x08
		t=0;
 664:	13 86       	std	Z+11, r1	; 0x0b
 666:	12 86       	std	Z+10, r1	; 0x0a
	|----|---|--------|------|-------|--
	   t0   t1       t2     t3      t4  
     <-------------T---------------->
	*/
	//El constructor no es void, y tiene que tener si o si el mismo nombre que la clase
	osciladorPWM(unsigned char salida, int maximo,  int dt0,  int dt1,  int dt2,  int dt3,  int dt4){
 668:	30 e0       	ldi	r19, 0x00	; 0
 66a:	c3 2e       	mov	r12, r19
 66c:	31 e0       	ldi	r19, 0x01	; 1
 66e:	d3 2e       	mov	r13, r19
 670:	f6 01       	movw	r30, r12
 672:	13 86       	std	Z+11, r1	; 0x0b
 674:	12 86       	std	Z+10, r1	; 0x0a
		pin = salida;
 676:	83 e0       	ldi	r24, 0x03	; 3
 678:	80 8b       	std	Z+16, r24	; 0x10
		pinMode(pin,OUTPUT);
 67a:	61 e0       	ldi	r22, 0x01	; 1
 67c:	0e 94 7e 06 	call	0xcfc	; 0xcfc <pinMode>
		PWM_MAX = maximo;
 680:	f6 01       	movw	r30, r12
 682:	84 86       	std	Z+12, r8	; 0x0c
 684:	95 86       	std	Z+13, r9	; 0x0d
 686:	a6 86       	std	Z+14, r10	; 0x0e
 688:	b7 86       	std	Z+15, r11	; 0x0f
		
		t0=dt0;
 68a:	11 82       	std	Z+1, r1	; 0x01
 68c:	10 82       	st	Z, r1
		t1=t0+dt1;
 68e:	d3 83       	std	Z+3, r29	; 0x03
 690:	c2 83       	std	Z+2, r28	; 0x02
		t2=t1+dt2;
 692:	55 82       	std	Z+5, r5	; 0x05
 694:	44 82       	std	Z+4, r4	; 0x04
		t3=t2+dt3;
 696:	f7 82       	std	Z+7, r15	; 0x07
 698:	e6 82       	std	Z+6, r14	; 0x06
		t4=t3+dt4;
 69a:	11 87       	std	Z+9, r17	; 0x09
 69c:	00 87       	std	Z+8, r16	; 0x08
		t=0;
 69e:	13 86       	std	Z+11, r1	; 0x0b
 6a0:	12 86       	std	Z+10, r1	; 0x0a
 6a2:	df 91       	pop	r29
 6a4:	cf 91       	pop	r28
 6a6:	1f 91       	pop	r17
 6a8:	0f 91       	pop	r16
 6aa:	ff 90       	pop	r15
 6ac:	ef 90       	pop	r14
 6ae:	df 90       	pop	r13
 6b0:	cf 90       	pop	r12
 6b2:	bf 90       	pop	r11
 6b4:	af 90       	pop	r10
 6b6:	9f 90       	pop	r9
 6b8:	8f 90       	pop	r8
 6ba:	7f 90       	pop	r7
 6bc:	6f 90       	pop	r6
 6be:	5f 90       	pop	r5
 6c0:	4f 90       	pop	r4
 6c2:	3f 90       	pop	r3
 6c4:	2f 90       	pop	r2
 6c6:	08 95       	ret

000006c8 <__divsf3>:
 6c8:	0e 94 78 03 	call	0x6f0	; 0x6f0 <__divsf3x>
 6cc:	0c 94 59 04 	jmp	0x8b2	; 0x8b2 <__fp_round>
 6d0:	0e 94 52 04 	call	0x8a4	; 0x8a4 <__fp_pscB>
 6d4:	58 f0       	brcs	.+22     	; 0x6ec <__divsf3+0x24>
 6d6:	0e 94 4b 04 	call	0x896	; 0x896 <__fp_pscA>
 6da:	40 f0       	brcs	.+16     	; 0x6ec <__divsf3+0x24>
 6dc:	29 f4       	brne	.+10     	; 0x6e8 <__divsf3+0x20>
 6de:	5f 3f       	cpi	r21, 0xFF	; 255
 6e0:	29 f0       	breq	.+10     	; 0x6ec <__divsf3+0x24>
 6e2:	0c 94 42 04 	jmp	0x884	; 0x884 <__fp_inf>
 6e6:	51 11       	cpse	r21, r1
 6e8:	0c 94 8d 04 	jmp	0x91a	; 0x91a <__fp_szero>
 6ec:	0c 94 48 04 	jmp	0x890	; 0x890 <__fp_nan>

000006f0 <__divsf3x>:
 6f0:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <__fp_split3>
 6f4:	68 f3       	brcs	.-38     	; 0x6d0 <__divsf3+0x8>

000006f6 <__divsf3_pse>:
 6f6:	99 23       	and	r25, r25
 6f8:	b1 f3       	breq	.-20     	; 0x6e6 <__divsf3+0x1e>
 6fa:	55 23       	and	r21, r21
 6fc:	91 f3       	breq	.-28     	; 0x6e2 <__divsf3+0x1a>
 6fe:	95 1b       	sub	r25, r21
 700:	55 0b       	sbc	r21, r21
 702:	bb 27       	eor	r27, r27
 704:	aa 27       	eor	r26, r26
 706:	62 17       	cp	r22, r18
 708:	73 07       	cpc	r23, r19
 70a:	84 07       	cpc	r24, r20
 70c:	38 f0       	brcs	.+14     	; 0x71c <__divsf3_pse+0x26>
 70e:	9f 5f       	subi	r25, 0xFF	; 255
 710:	5f 4f       	sbci	r21, 0xFF	; 255
 712:	22 0f       	add	r18, r18
 714:	33 1f       	adc	r19, r19
 716:	44 1f       	adc	r20, r20
 718:	aa 1f       	adc	r26, r26
 71a:	a9 f3       	breq	.-22     	; 0x706 <__divsf3_pse+0x10>
 71c:	35 d0       	rcall	.+106    	; 0x788 <__divsf3_pse+0x92>
 71e:	0e 2e       	mov	r0, r30
 720:	3a f0       	brmi	.+14     	; 0x730 <__divsf3_pse+0x3a>
 722:	e0 e8       	ldi	r30, 0x80	; 128
 724:	32 d0       	rcall	.+100    	; 0x78a <__divsf3_pse+0x94>
 726:	91 50       	subi	r25, 0x01	; 1
 728:	50 40       	sbci	r21, 0x00	; 0
 72a:	e6 95       	lsr	r30
 72c:	00 1c       	adc	r0, r0
 72e:	ca f7       	brpl	.-14     	; 0x722 <__divsf3_pse+0x2c>
 730:	2b d0       	rcall	.+86     	; 0x788 <__divsf3_pse+0x92>
 732:	fe 2f       	mov	r31, r30
 734:	29 d0       	rcall	.+82     	; 0x788 <__divsf3_pse+0x92>
 736:	66 0f       	add	r22, r22
 738:	77 1f       	adc	r23, r23
 73a:	88 1f       	adc	r24, r24
 73c:	bb 1f       	adc	r27, r27
 73e:	26 17       	cp	r18, r22
 740:	37 07       	cpc	r19, r23
 742:	48 07       	cpc	r20, r24
 744:	ab 07       	cpc	r26, r27
 746:	b0 e8       	ldi	r27, 0x80	; 128
 748:	09 f0       	breq	.+2      	; 0x74c <__divsf3_pse+0x56>
 74a:	bb 0b       	sbc	r27, r27
 74c:	80 2d       	mov	r24, r0
 74e:	bf 01       	movw	r22, r30
 750:	ff 27       	eor	r31, r31
 752:	93 58       	subi	r25, 0x83	; 131
 754:	5f 4f       	sbci	r21, 0xFF	; 255
 756:	3a f0       	brmi	.+14     	; 0x766 <__divsf3_pse+0x70>
 758:	9e 3f       	cpi	r25, 0xFE	; 254
 75a:	51 05       	cpc	r21, r1
 75c:	78 f0       	brcs	.+30     	; 0x77c <__divsf3_pse+0x86>
 75e:	0c 94 42 04 	jmp	0x884	; 0x884 <__fp_inf>
 762:	0c 94 8d 04 	jmp	0x91a	; 0x91a <__fp_szero>
 766:	5f 3f       	cpi	r21, 0xFF	; 255
 768:	e4 f3       	brlt	.-8      	; 0x762 <__divsf3_pse+0x6c>
 76a:	98 3e       	cpi	r25, 0xE8	; 232
 76c:	d4 f3       	brlt	.-12     	; 0x762 <__divsf3_pse+0x6c>
 76e:	86 95       	lsr	r24
 770:	77 95       	ror	r23
 772:	67 95       	ror	r22
 774:	b7 95       	ror	r27
 776:	f7 95       	ror	r31
 778:	9f 5f       	subi	r25, 0xFF	; 255
 77a:	c9 f7       	brne	.-14     	; 0x76e <__divsf3_pse+0x78>
 77c:	88 0f       	add	r24, r24
 77e:	91 1d       	adc	r25, r1
 780:	96 95       	lsr	r25
 782:	87 95       	ror	r24
 784:	97 f9       	bld	r25, 7
 786:	08 95       	ret
 788:	e1 e0       	ldi	r30, 0x01	; 1
 78a:	66 0f       	add	r22, r22
 78c:	77 1f       	adc	r23, r23
 78e:	88 1f       	adc	r24, r24
 790:	bb 1f       	adc	r27, r27
 792:	62 17       	cp	r22, r18
 794:	73 07       	cpc	r23, r19
 796:	84 07       	cpc	r24, r20
 798:	ba 07       	cpc	r27, r26
 79a:	20 f0       	brcs	.+8      	; 0x7a4 <__divsf3_pse+0xae>
 79c:	62 1b       	sub	r22, r18
 79e:	73 0b       	sbc	r23, r19
 7a0:	84 0b       	sbc	r24, r20
 7a2:	ba 0b       	sbc	r27, r26
 7a4:	ee 1f       	adc	r30, r30
 7a6:	88 f7       	brcc	.-30     	; 0x78a <__divsf3_pse+0x94>
 7a8:	e0 95       	com	r30
 7aa:	08 95       	ret

000007ac <__fixunssfsi>:
 7ac:	0e 94 72 04 	call	0x8e4	; 0x8e4 <__fp_splitA>
 7b0:	88 f0       	brcs	.+34     	; 0x7d4 <__fixunssfsi+0x28>
 7b2:	9f 57       	subi	r25, 0x7F	; 127
 7b4:	98 f0       	brcs	.+38     	; 0x7dc <__fixunssfsi+0x30>
 7b6:	b9 2f       	mov	r27, r25
 7b8:	99 27       	eor	r25, r25
 7ba:	b7 51       	subi	r27, 0x17	; 23
 7bc:	b0 f0       	brcs	.+44     	; 0x7ea <__fixunssfsi+0x3e>
 7be:	e1 f0       	breq	.+56     	; 0x7f8 <__fixunssfsi+0x4c>
 7c0:	66 0f       	add	r22, r22
 7c2:	77 1f       	adc	r23, r23
 7c4:	88 1f       	adc	r24, r24
 7c6:	99 1f       	adc	r25, r25
 7c8:	1a f0       	brmi	.+6      	; 0x7d0 <__fixunssfsi+0x24>
 7ca:	ba 95       	dec	r27
 7cc:	c9 f7       	brne	.-14     	; 0x7c0 <__fixunssfsi+0x14>
 7ce:	14 c0       	rjmp	.+40     	; 0x7f8 <__fixunssfsi+0x4c>
 7d0:	b1 30       	cpi	r27, 0x01	; 1
 7d2:	91 f0       	breq	.+36     	; 0x7f8 <__fixunssfsi+0x4c>
 7d4:	0e 94 8c 04 	call	0x918	; 0x918 <__fp_zero>
 7d8:	b1 e0       	ldi	r27, 0x01	; 1
 7da:	08 95       	ret
 7dc:	0c 94 8c 04 	jmp	0x918	; 0x918 <__fp_zero>
 7e0:	67 2f       	mov	r22, r23
 7e2:	78 2f       	mov	r23, r24
 7e4:	88 27       	eor	r24, r24
 7e6:	b8 5f       	subi	r27, 0xF8	; 248
 7e8:	39 f0       	breq	.+14     	; 0x7f8 <__fixunssfsi+0x4c>
 7ea:	b9 3f       	cpi	r27, 0xF9	; 249
 7ec:	cc f3       	brlt	.-14     	; 0x7e0 <__fixunssfsi+0x34>
 7ee:	86 95       	lsr	r24
 7f0:	77 95       	ror	r23
 7f2:	67 95       	ror	r22
 7f4:	b3 95       	inc	r27
 7f6:	d9 f7       	brne	.-10     	; 0x7ee <__fixunssfsi+0x42>
 7f8:	3e f4       	brtc	.+14     	; 0x808 <__fixunssfsi+0x5c>
 7fa:	90 95       	com	r25
 7fc:	80 95       	com	r24
 7fe:	70 95       	com	r23
 800:	61 95       	neg	r22
 802:	7f 4f       	sbci	r23, 0xFF	; 255
 804:	8f 4f       	sbci	r24, 0xFF	; 255
 806:	9f 4f       	sbci	r25, 0xFF	; 255
 808:	08 95       	ret

0000080a <__floatunsisf>:
 80a:	e8 94       	clt
 80c:	09 c0       	rjmp	.+18     	; 0x820 <__floatsisf+0x12>

0000080e <__floatsisf>:
 80e:	97 fb       	bst	r25, 7
 810:	3e f4       	brtc	.+14     	; 0x820 <__floatsisf+0x12>
 812:	90 95       	com	r25
 814:	80 95       	com	r24
 816:	70 95       	com	r23
 818:	61 95       	neg	r22
 81a:	7f 4f       	sbci	r23, 0xFF	; 255
 81c:	8f 4f       	sbci	r24, 0xFF	; 255
 81e:	9f 4f       	sbci	r25, 0xFF	; 255
 820:	99 23       	and	r25, r25
 822:	a9 f0       	breq	.+42     	; 0x84e <__floatsisf+0x40>
 824:	f9 2f       	mov	r31, r25
 826:	96 e9       	ldi	r25, 0x96	; 150
 828:	bb 27       	eor	r27, r27
 82a:	93 95       	inc	r25
 82c:	f6 95       	lsr	r31
 82e:	87 95       	ror	r24
 830:	77 95       	ror	r23
 832:	67 95       	ror	r22
 834:	b7 95       	ror	r27
 836:	f1 11       	cpse	r31, r1
 838:	f8 cf       	rjmp	.-16     	; 0x82a <__floatsisf+0x1c>
 83a:	fa f4       	brpl	.+62     	; 0x87a <__floatsisf+0x6c>
 83c:	bb 0f       	add	r27, r27
 83e:	11 f4       	brne	.+4      	; 0x844 <__floatsisf+0x36>
 840:	60 ff       	sbrs	r22, 0
 842:	1b c0       	rjmp	.+54     	; 0x87a <__floatsisf+0x6c>
 844:	6f 5f       	subi	r22, 0xFF	; 255
 846:	7f 4f       	sbci	r23, 0xFF	; 255
 848:	8f 4f       	sbci	r24, 0xFF	; 255
 84a:	9f 4f       	sbci	r25, 0xFF	; 255
 84c:	16 c0       	rjmp	.+44     	; 0x87a <__floatsisf+0x6c>
 84e:	88 23       	and	r24, r24
 850:	11 f0       	breq	.+4      	; 0x856 <__floatsisf+0x48>
 852:	96 e9       	ldi	r25, 0x96	; 150
 854:	11 c0       	rjmp	.+34     	; 0x878 <__floatsisf+0x6a>
 856:	77 23       	and	r23, r23
 858:	21 f0       	breq	.+8      	; 0x862 <__floatsisf+0x54>
 85a:	9e e8       	ldi	r25, 0x8E	; 142
 85c:	87 2f       	mov	r24, r23
 85e:	76 2f       	mov	r23, r22
 860:	05 c0       	rjmp	.+10     	; 0x86c <__floatsisf+0x5e>
 862:	66 23       	and	r22, r22
 864:	71 f0       	breq	.+28     	; 0x882 <__floatsisf+0x74>
 866:	96 e8       	ldi	r25, 0x86	; 134
 868:	86 2f       	mov	r24, r22
 86a:	70 e0       	ldi	r23, 0x00	; 0
 86c:	60 e0       	ldi	r22, 0x00	; 0
 86e:	2a f0       	brmi	.+10     	; 0x87a <__floatsisf+0x6c>
 870:	9a 95       	dec	r25
 872:	66 0f       	add	r22, r22
 874:	77 1f       	adc	r23, r23
 876:	88 1f       	adc	r24, r24
 878:	da f7       	brpl	.-10     	; 0x870 <__floatsisf+0x62>
 87a:	88 0f       	add	r24, r24
 87c:	96 95       	lsr	r25
 87e:	87 95       	ror	r24
 880:	97 f9       	bld	r25, 7
 882:	08 95       	ret

00000884 <__fp_inf>:
 884:	97 f9       	bld	r25, 7
 886:	9f 67       	ori	r25, 0x7F	; 127
 888:	80 e8       	ldi	r24, 0x80	; 128
 88a:	70 e0       	ldi	r23, 0x00	; 0
 88c:	60 e0       	ldi	r22, 0x00	; 0
 88e:	08 95       	ret

00000890 <__fp_nan>:
 890:	9f ef       	ldi	r25, 0xFF	; 255
 892:	80 ec       	ldi	r24, 0xC0	; 192
 894:	08 95       	ret

00000896 <__fp_pscA>:
 896:	00 24       	eor	r0, r0
 898:	0a 94       	dec	r0
 89a:	16 16       	cp	r1, r22
 89c:	17 06       	cpc	r1, r23
 89e:	18 06       	cpc	r1, r24
 8a0:	09 06       	cpc	r0, r25
 8a2:	08 95       	ret

000008a4 <__fp_pscB>:
 8a4:	00 24       	eor	r0, r0
 8a6:	0a 94       	dec	r0
 8a8:	12 16       	cp	r1, r18
 8aa:	13 06       	cpc	r1, r19
 8ac:	14 06       	cpc	r1, r20
 8ae:	05 06       	cpc	r0, r21
 8b0:	08 95       	ret

000008b2 <__fp_round>:
 8b2:	09 2e       	mov	r0, r25
 8b4:	03 94       	inc	r0
 8b6:	00 0c       	add	r0, r0
 8b8:	11 f4       	brne	.+4      	; 0x8be <__fp_round+0xc>
 8ba:	88 23       	and	r24, r24
 8bc:	52 f0       	brmi	.+20     	; 0x8d2 <__fp_round+0x20>
 8be:	bb 0f       	add	r27, r27
 8c0:	40 f4       	brcc	.+16     	; 0x8d2 <__fp_round+0x20>
 8c2:	bf 2b       	or	r27, r31
 8c4:	11 f4       	brne	.+4      	; 0x8ca <__fp_round+0x18>
 8c6:	60 ff       	sbrs	r22, 0
 8c8:	04 c0       	rjmp	.+8      	; 0x8d2 <__fp_round+0x20>
 8ca:	6f 5f       	subi	r22, 0xFF	; 255
 8cc:	7f 4f       	sbci	r23, 0xFF	; 255
 8ce:	8f 4f       	sbci	r24, 0xFF	; 255
 8d0:	9f 4f       	sbci	r25, 0xFF	; 255
 8d2:	08 95       	ret

000008d4 <__fp_split3>:
 8d4:	57 fd       	sbrc	r21, 7
 8d6:	90 58       	subi	r25, 0x80	; 128
 8d8:	44 0f       	add	r20, r20
 8da:	55 1f       	adc	r21, r21
 8dc:	59 f0       	breq	.+22     	; 0x8f4 <__fp_splitA+0x10>
 8de:	5f 3f       	cpi	r21, 0xFF	; 255
 8e0:	71 f0       	breq	.+28     	; 0x8fe <__fp_splitA+0x1a>
 8e2:	47 95       	ror	r20

000008e4 <__fp_splitA>:
 8e4:	88 0f       	add	r24, r24
 8e6:	97 fb       	bst	r25, 7
 8e8:	99 1f       	adc	r25, r25
 8ea:	61 f0       	breq	.+24     	; 0x904 <__stack+0x5>
 8ec:	9f 3f       	cpi	r25, 0xFF	; 255
 8ee:	79 f0       	breq	.+30     	; 0x90e <__stack+0xf>
 8f0:	87 95       	ror	r24
 8f2:	08 95       	ret
 8f4:	12 16       	cp	r1, r18
 8f6:	13 06       	cpc	r1, r19
 8f8:	14 06       	cpc	r1, r20
 8fa:	55 1f       	adc	r21, r21
 8fc:	f2 cf       	rjmp	.-28     	; 0x8e2 <__fp_split3+0xe>
 8fe:	46 95       	lsr	r20
 900:	f1 df       	rcall	.-30     	; 0x8e4 <__fp_splitA>
 902:	08 c0       	rjmp	.+16     	; 0x914 <__stack+0x15>
 904:	16 16       	cp	r1, r22
 906:	17 06       	cpc	r1, r23
 908:	18 06       	cpc	r1, r24
 90a:	99 1f       	adc	r25, r25
 90c:	f1 cf       	rjmp	.-30     	; 0x8f0 <__fp_splitA+0xc>
 90e:	86 95       	lsr	r24
 910:	71 05       	cpc	r23, r1
 912:	61 05       	cpc	r22, r1
 914:	08 94       	sec
 916:	08 95       	ret

00000918 <__fp_zero>:
 918:	e8 94       	clt

0000091a <__fp_szero>:
 91a:	bb 27       	eor	r27, r27
 91c:	66 27       	eor	r22, r22
 91e:	77 27       	eor	r23, r23
 920:	cb 01       	movw	r24, r22
 922:	97 f9       	bld	r25, 7
 924:	08 95       	ret

00000926 <__mulsf3>:
 926:	0e 94 a6 04 	call	0x94c	; 0x94c <__mulsf3x>
 92a:	0c 94 59 04 	jmp	0x8b2	; 0x8b2 <__fp_round>
 92e:	0e 94 4b 04 	call	0x896	; 0x896 <__fp_pscA>
 932:	38 f0       	brcs	.+14     	; 0x942 <__mulsf3+0x1c>
 934:	0e 94 52 04 	call	0x8a4	; 0x8a4 <__fp_pscB>
 938:	20 f0       	brcs	.+8      	; 0x942 <__mulsf3+0x1c>
 93a:	95 23       	and	r25, r21
 93c:	11 f0       	breq	.+4      	; 0x942 <__mulsf3+0x1c>
 93e:	0c 94 42 04 	jmp	0x884	; 0x884 <__fp_inf>
 942:	0c 94 48 04 	jmp	0x890	; 0x890 <__fp_nan>
 946:	11 24       	eor	r1, r1
 948:	0c 94 8d 04 	jmp	0x91a	; 0x91a <__fp_szero>

0000094c <__mulsf3x>:
 94c:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <__fp_split3>
 950:	70 f3       	brcs	.-36     	; 0x92e <__mulsf3+0x8>

00000952 <__mulsf3_pse>:
 952:	95 9f       	mul	r25, r21
 954:	c1 f3       	breq	.-16     	; 0x946 <__mulsf3+0x20>
 956:	95 0f       	add	r25, r21
 958:	50 e0       	ldi	r21, 0x00	; 0
 95a:	55 1f       	adc	r21, r21
 95c:	62 9f       	mul	r22, r18
 95e:	f0 01       	movw	r30, r0
 960:	72 9f       	mul	r23, r18
 962:	bb 27       	eor	r27, r27
 964:	f0 0d       	add	r31, r0
 966:	b1 1d       	adc	r27, r1
 968:	63 9f       	mul	r22, r19
 96a:	aa 27       	eor	r26, r26
 96c:	f0 0d       	add	r31, r0
 96e:	b1 1d       	adc	r27, r1
 970:	aa 1f       	adc	r26, r26
 972:	64 9f       	mul	r22, r20
 974:	66 27       	eor	r22, r22
 976:	b0 0d       	add	r27, r0
 978:	a1 1d       	adc	r26, r1
 97a:	66 1f       	adc	r22, r22
 97c:	82 9f       	mul	r24, r18
 97e:	22 27       	eor	r18, r18
 980:	b0 0d       	add	r27, r0
 982:	a1 1d       	adc	r26, r1
 984:	62 1f       	adc	r22, r18
 986:	73 9f       	mul	r23, r19
 988:	b0 0d       	add	r27, r0
 98a:	a1 1d       	adc	r26, r1
 98c:	62 1f       	adc	r22, r18
 98e:	83 9f       	mul	r24, r19
 990:	a0 0d       	add	r26, r0
 992:	61 1d       	adc	r22, r1
 994:	22 1f       	adc	r18, r18
 996:	74 9f       	mul	r23, r20
 998:	33 27       	eor	r19, r19
 99a:	a0 0d       	add	r26, r0
 99c:	61 1d       	adc	r22, r1
 99e:	23 1f       	adc	r18, r19
 9a0:	84 9f       	mul	r24, r20
 9a2:	60 0d       	add	r22, r0
 9a4:	21 1d       	adc	r18, r1
 9a6:	82 2f       	mov	r24, r18
 9a8:	76 2f       	mov	r23, r22
 9aa:	6a 2f       	mov	r22, r26
 9ac:	11 24       	eor	r1, r1
 9ae:	9f 57       	subi	r25, 0x7F	; 127
 9b0:	50 40       	sbci	r21, 0x00	; 0
 9b2:	9a f0       	brmi	.+38     	; 0x9da <__mulsf3_pse+0x88>
 9b4:	f1 f0       	breq	.+60     	; 0x9f2 <__mulsf3_pse+0xa0>
 9b6:	88 23       	and	r24, r24
 9b8:	4a f0       	brmi	.+18     	; 0x9cc <__mulsf3_pse+0x7a>
 9ba:	ee 0f       	add	r30, r30
 9bc:	ff 1f       	adc	r31, r31
 9be:	bb 1f       	adc	r27, r27
 9c0:	66 1f       	adc	r22, r22
 9c2:	77 1f       	adc	r23, r23
 9c4:	88 1f       	adc	r24, r24
 9c6:	91 50       	subi	r25, 0x01	; 1
 9c8:	50 40       	sbci	r21, 0x00	; 0
 9ca:	a9 f7       	brne	.-22     	; 0x9b6 <__mulsf3_pse+0x64>
 9cc:	9e 3f       	cpi	r25, 0xFE	; 254
 9ce:	51 05       	cpc	r21, r1
 9d0:	80 f0       	brcs	.+32     	; 0x9f2 <__mulsf3_pse+0xa0>
 9d2:	0c 94 42 04 	jmp	0x884	; 0x884 <__fp_inf>
 9d6:	0c 94 8d 04 	jmp	0x91a	; 0x91a <__fp_szero>
 9da:	5f 3f       	cpi	r21, 0xFF	; 255
 9dc:	e4 f3       	brlt	.-8      	; 0x9d6 <__mulsf3_pse+0x84>
 9de:	98 3e       	cpi	r25, 0xE8	; 232
 9e0:	d4 f3       	brlt	.-12     	; 0x9d6 <__mulsf3_pse+0x84>
 9e2:	86 95       	lsr	r24
 9e4:	77 95       	ror	r23
 9e6:	67 95       	ror	r22
 9e8:	b7 95       	ror	r27
 9ea:	f7 95       	ror	r31
 9ec:	e7 95       	ror	r30
 9ee:	9f 5f       	subi	r25, 0xFF	; 255
 9f0:	c1 f7       	brne	.-16     	; 0x9e2 <__mulsf3_pse+0x90>
 9f2:	fe 2b       	or	r31, r30
 9f4:	88 0f       	add	r24, r24
 9f6:	91 1d       	adc	r25, r1
 9f8:	96 95       	lsr	r25
 9fa:	87 95       	ror	r24
 9fc:	97 f9       	bld	r25, 7
 9fe:	08 95       	ret

00000a00 <initVariant>:
 a00:	08 95       	ret

00000a02 <main>:
 a02:	0e 94 bb 05 	call	0xb76	; 0xb76 <init>
 a06:	0e 94 00 05 	call	0xa00	; 0xa00 <initVariant>
 a0a:	0e 94 15 01 	call	0x22a	; 0x22a <setup>
 a0e:	c0 e0       	ldi	r28, 0x00	; 0
 a10:	d0 e0       	ldi	r29, 0x00	; 0
 a12:	0e 94 2d 01 	call	0x25a	; 0x25a <loop>
 a16:	20 97       	sbiw	r28, 0x00	; 0
 a18:	e1 f3       	breq	.-8      	; 0xa12 <main+0x10>
 a1a:	0e 94 00 00 	call	0	; 0x0 <__vectors>
 a1e:	f9 cf       	rjmp	.-14     	; 0xa12 <main+0x10>

00000a20 <__vector_16>:
 a20:	1f 92       	push	r1
 a22:	0f 92       	push	r0
 a24:	0f b6       	in	r0, 0x3f	; 63
 a26:	0f 92       	push	r0
 a28:	11 24       	eor	r1, r1
 a2a:	2f 93       	push	r18
 a2c:	3f 93       	push	r19
 a2e:	8f 93       	push	r24
 a30:	9f 93       	push	r25
 a32:	af 93       	push	r26
 a34:	bf 93       	push	r27
 a36:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <timer0_millis>
 a3a:	90 91 9b 01 	lds	r25, 0x019B	; 0x80019b <timer0_millis+0x1>
 a3e:	a0 91 9c 01 	lds	r26, 0x019C	; 0x80019c <timer0_millis+0x2>
 a42:	b0 91 9d 01 	lds	r27, 0x019D	; 0x80019d <timer0_millis+0x3>
 a46:	30 91 99 01 	lds	r19, 0x0199	; 0x800199 <timer0_fract>
 a4a:	23 e0       	ldi	r18, 0x03	; 3
 a4c:	23 0f       	add	r18, r19
 a4e:	2d 37       	cpi	r18, 0x7D	; 125
 a50:	20 f4       	brcc	.+8      	; 0xa5a <__vector_16+0x3a>
 a52:	01 96       	adiw	r24, 0x01	; 1
 a54:	a1 1d       	adc	r26, r1
 a56:	b1 1d       	adc	r27, r1
 a58:	05 c0       	rjmp	.+10     	; 0xa64 <__vector_16+0x44>
 a5a:	26 e8       	ldi	r18, 0x86	; 134
 a5c:	23 0f       	add	r18, r19
 a5e:	02 96       	adiw	r24, 0x02	; 2
 a60:	a1 1d       	adc	r26, r1
 a62:	b1 1d       	adc	r27, r1
 a64:	20 93 99 01 	sts	0x0199, r18	; 0x800199 <timer0_fract>
 a68:	80 93 9a 01 	sts	0x019A, r24	; 0x80019a <timer0_millis>
 a6c:	90 93 9b 01 	sts	0x019B, r25	; 0x80019b <timer0_millis+0x1>
 a70:	a0 93 9c 01 	sts	0x019C, r26	; 0x80019c <timer0_millis+0x2>
 a74:	b0 93 9d 01 	sts	0x019D, r27	; 0x80019d <timer0_millis+0x3>
 a78:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <timer0_overflow_count>
 a7c:	90 91 9f 01 	lds	r25, 0x019F	; 0x80019f <timer0_overflow_count+0x1>
 a80:	a0 91 a0 01 	lds	r26, 0x01A0	; 0x8001a0 <timer0_overflow_count+0x2>
 a84:	b0 91 a1 01 	lds	r27, 0x01A1	; 0x8001a1 <timer0_overflow_count+0x3>
 a88:	01 96       	adiw	r24, 0x01	; 1
 a8a:	a1 1d       	adc	r26, r1
 a8c:	b1 1d       	adc	r27, r1
 a8e:	80 93 9e 01 	sts	0x019E, r24	; 0x80019e <timer0_overflow_count>
 a92:	90 93 9f 01 	sts	0x019F, r25	; 0x80019f <timer0_overflow_count+0x1>
 a96:	a0 93 a0 01 	sts	0x01A0, r26	; 0x8001a0 <timer0_overflow_count+0x2>
 a9a:	b0 93 a1 01 	sts	0x01A1, r27	; 0x8001a1 <timer0_overflow_count+0x3>
 a9e:	bf 91       	pop	r27
 aa0:	af 91       	pop	r26
 aa2:	9f 91       	pop	r25
 aa4:	8f 91       	pop	r24
 aa6:	3f 91       	pop	r19
 aa8:	2f 91       	pop	r18
 aaa:	0f 90       	pop	r0
 aac:	0f be       	out	0x3f, r0	; 63
 aae:	0f 90       	pop	r0
 ab0:	1f 90       	pop	r1
 ab2:	18 95       	reti

00000ab4 <micros>:
 ab4:	3f b7       	in	r19, 0x3f	; 63
 ab6:	f8 94       	cli
 ab8:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <timer0_overflow_count>
 abc:	90 91 9f 01 	lds	r25, 0x019F	; 0x80019f <timer0_overflow_count+0x1>
 ac0:	a0 91 a0 01 	lds	r26, 0x01A0	; 0x8001a0 <timer0_overflow_count+0x2>
 ac4:	b0 91 a1 01 	lds	r27, 0x01A1	; 0x8001a1 <timer0_overflow_count+0x3>
 ac8:	26 b5       	in	r18, 0x26	; 38
 aca:	a8 9b       	sbis	0x15, 0	; 21
 acc:	05 c0       	rjmp	.+10     	; 0xad8 <micros+0x24>
 ace:	2f 3f       	cpi	r18, 0xFF	; 255
 ad0:	19 f0       	breq	.+6      	; 0xad8 <micros+0x24>
 ad2:	01 96       	adiw	r24, 0x01	; 1
 ad4:	a1 1d       	adc	r26, r1
 ad6:	b1 1d       	adc	r27, r1
 ad8:	3f bf       	out	0x3f, r19	; 63
 ada:	ba 2f       	mov	r27, r26
 adc:	a9 2f       	mov	r26, r25
 ade:	98 2f       	mov	r25, r24
 ae0:	88 27       	eor	r24, r24
 ae2:	82 0f       	add	r24, r18
 ae4:	91 1d       	adc	r25, r1
 ae6:	a1 1d       	adc	r26, r1
 ae8:	b1 1d       	adc	r27, r1
 aea:	bc 01       	movw	r22, r24
 aec:	cd 01       	movw	r24, r26
 aee:	42 e0       	ldi	r20, 0x02	; 2
 af0:	66 0f       	add	r22, r22
 af2:	77 1f       	adc	r23, r23
 af4:	88 1f       	adc	r24, r24
 af6:	99 1f       	adc	r25, r25
 af8:	4a 95       	dec	r20
 afa:	d1 f7       	brne	.-12     	; 0xaf0 <micros+0x3c>
 afc:	08 95       	ret

00000afe <delay>:
 afe:	8f 92       	push	r8
 b00:	9f 92       	push	r9
 b02:	af 92       	push	r10
 b04:	bf 92       	push	r11
 b06:	cf 92       	push	r12
 b08:	df 92       	push	r13
 b0a:	ef 92       	push	r14
 b0c:	ff 92       	push	r15
 b0e:	6b 01       	movw	r12, r22
 b10:	7c 01       	movw	r14, r24
 b12:	0e 94 5a 05 	call	0xab4	; 0xab4 <micros>
 b16:	4b 01       	movw	r8, r22
 b18:	5c 01       	movw	r10, r24
 b1a:	c1 14       	cp	r12, r1
 b1c:	d1 04       	cpc	r13, r1
 b1e:	e1 04       	cpc	r14, r1
 b20:	f1 04       	cpc	r15, r1
 b22:	01 f1       	breq	.+64     	; 0xb64 <delay+0x66>
 b24:	0e 94 e9 06 	call	0xdd2	; 0xdd2 <yield>
 b28:	0e 94 5a 05 	call	0xab4	; 0xab4 <micros>
 b2c:	dc 01       	movw	r26, r24
 b2e:	cb 01       	movw	r24, r22
 b30:	88 19       	sub	r24, r8
 b32:	99 09       	sbc	r25, r9
 b34:	aa 09       	sbc	r26, r10
 b36:	bb 09       	sbc	r27, r11
 b38:	88 3e       	cpi	r24, 0xE8	; 232
 b3a:	93 40       	sbci	r25, 0x03	; 3
 b3c:	a1 05       	cpc	r26, r1
 b3e:	b1 05       	cpc	r27, r1
 b40:	60 f3       	brcs	.-40     	; 0xb1a <delay+0x1c>
 b42:	21 e0       	ldi	r18, 0x01	; 1
 b44:	c2 1a       	sub	r12, r18
 b46:	d1 08       	sbc	r13, r1
 b48:	e1 08       	sbc	r14, r1
 b4a:	f1 08       	sbc	r15, r1
 b4c:	88 ee       	ldi	r24, 0xE8	; 232
 b4e:	88 0e       	add	r8, r24
 b50:	83 e0       	ldi	r24, 0x03	; 3
 b52:	98 1e       	adc	r9, r24
 b54:	a1 1c       	adc	r10, r1
 b56:	b1 1c       	adc	r11, r1
 b58:	c1 14       	cp	r12, r1
 b5a:	d1 04       	cpc	r13, r1
 b5c:	e1 04       	cpc	r14, r1
 b5e:	f1 04       	cpc	r15, r1
 b60:	19 f7       	brne	.-58     	; 0xb28 <delay+0x2a>
 b62:	db cf       	rjmp	.-74     	; 0xb1a <delay+0x1c>
 b64:	ff 90       	pop	r15
 b66:	ef 90       	pop	r14
 b68:	df 90       	pop	r13
 b6a:	cf 90       	pop	r12
 b6c:	bf 90       	pop	r11
 b6e:	af 90       	pop	r10
 b70:	9f 90       	pop	r9
 b72:	8f 90       	pop	r8
 b74:	08 95       	ret

00000b76 <init>:
 b76:	78 94       	sei
 b78:	84 b5       	in	r24, 0x24	; 36
 b7a:	82 60       	ori	r24, 0x02	; 2
 b7c:	84 bd       	out	0x24, r24	; 36
 b7e:	84 b5       	in	r24, 0x24	; 36
 b80:	81 60       	ori	r24, 0x01	; 1
 b82:	84 bd       	out	0x24, r24	; 36
 b84:	85 b5       	in	r24, 0x25	; 37
 b86:	82 60       	ori	r24, 0x02	; 2
 b88:	85 bd       	out	0x25, r24	; 37
 b8a:	85 b5       	in	r24, 0x25	; 37
 b8c:	81 60       	ori	r24, 0x01	; 1
 b8e:	85 bd       	out	0x25, r24	; 37
 b90:	ee e6       	ldi	r30, 0x6E	; 110
 b92:	f0 e0       	ldi	r31, 0x00	; 0
 b94:	80 81       	ld	r24, Z
 b96:	81 60       	ori	r24, 0x01	; 1
 b98:	80 83       	st	Z, r24
 b9a:	e1 e8       	ldi	r30, 0x81	; 129
 b9c:	f0 e0       	ldi	r31, 0x00	; 0
 b9e:	10 82       	st	Z, r1
 ba0:	80 81       	ld	r24, Z
 ba2:	82 60       	ori	r24, 0x02	; 2
 ba4:	80 83       	st	Z, r24
 ba6:	80 81       	ld	r24, Z
 ba8:	81 60       	ori	r24, 0x01	; 1
 baa:	80 83       	st	Z, r24
 bac:	e0 e8       	ldi	r30, 0x80	; 128
 bae:	f0 e0       	ldi	r31, 0x00	; 0
 bb0:	80 81       	ld	r24, Z
 bb2:	81 60       	ori	r24, 0x01	; 1
 bb4:	80 83       	st	Z, r24
 bb6:	e1 eb       	ldi	r30, 0xB1	; 177
 bb8:	f0 e0       	ldi	r31, 0x00	; 0
 bba:	80 81       	ld	r24, Z
 bbc:	84 60       	ori	r24, 0x04	; 4
 bbe:	80 83       	st	Z, r24
 bc0:	e0 eb       	ldi	r30, 0xB0	; 176
 bc2:	f0 e0       	ldi	r31, 0x00	; 0
 bc4:	80 81       	ld	r24, Z
 bc6:	81 60       	ori	r24, 0x01	; 1
 bc8:	80 83       	st	Z, r24
 bca:	ea e7       	ldi	r30, 0x7A	; 122
 bcc:	f0 e0       	ldi	r31, 0x00	; 0
 bce:	80 81       	ld	r24, Z
 bd0:	84 60       	ori	r24, 0x04	; 4
 bd2:	80 83       	st	Z, r24
 bd4:	80 81       	ld	r24, Z
 bd6:	82 60       	ori	r24, 0x02	; 2
 bd8:	80 83       	st	Z, r24
 bda:	80 81       	ld	r24, Z
 bdc:	81 60       	ori	r24, 0x01	; 1
 bde:	80 83       	st	Z, r24
 be0:	80 81       	ld	r24, Z
 be2:	80 68       	ori	r24, 0x80	; 128
 be4:	80 83       	st	Z, r24
 be6:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 bea:	08 95       	ret

00000bec <analogWrite>:
 bec:	1f 93       	push	r17
 bee:	cf 93       	push	r28
 bf0:	df 93       	push	r29
 bf2:	18 2f       	mov	r17, r24
 bf4:	eb 01       	movw	r28, r22
 bf6:	61 e0       	ldi	r22, 0x01	; 1
 bf8:	0e 94 7e 06 	call	0xcfc	; 0xcfc <pinMode>
 bfc:	20 97       	sbiw	r28, 0x00	; 0
 bfe:	11 f4       	brne	.+4      	; 0xc04 <analogWrite+0x18>
 c00:	60 e0       	ldi	r22, 0x00	; 0
 c02:	04 c0       	rjmp	.+8      	; 0xc0c <analogWrite+0x20>
 c04:	cf 3f       	cpi	r28, 0xFF	; 255
 c06:	d1 05       	cpc	r29, r1
 c08:	39 f4       	brne	.+14     	; 0xc18 <analogWrite+0x2c>
 c0a:	61 e0       	ldi	r22, 0x01	; 1
 c0c:	81 2f       	mov	r24, r17
 c0e:	df 91       	pop	r29
 c10:	cf 91       	pop	r28
 c12:	1f 91       	pop	r17
 c14:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <digitalWrite>
 c18:	e1 2f       	mov	r30, r17
 c1a:	f0 e0       	ldi	r31, 0x00	; 0
 c1c:	e8 59       	subi	r30, 0x98	; 152
 c1e:	ff 4f       	sbci	r31, 0xFF	; 255
 c20:	e4 91       	lpm	r30, Z
 c22:	e3 30       	cpi	r30, 0x03	; 3
 c24:	f9 f0       	breq	.+62     	; 0xc64 <analogWrite+0x78>
 c26:	48 f4       	brcc	.+18     	; 0xc3a <analogWrite+0x4e>
 c28:	e1 30       	cpi	r30, 0x01	; 1
 c2a:	b9 f0       	breq	.+46     	; 0xc5a <analogWrite+0x6e>
 c2c:	e2 30       	cpi	r30, 0x02	; 2
 c2e:	a1 f5       	brne	.+104    	; 0xc98 <analogWrite+0xac>
 c30:	84 b5       	in	r24, 0x24	; 36
 c32:	80 62       	ori	r24, 0x20	; 32
 c34:	84 bd       	out	0x24, r24	; 36
 c36:	c8 bd       	out	0x28, r28	; 40
 c38:	34 c0       	rjmp	.+104    	; 0xca2 <analogWrite+0xb6>
 c3a:	e7 30       	cpi	r30, 0x07	; 7
 c3c:	e9 f0       	breq	.+58     	; 0xc78 <analogWrite+0x8c>
 c3e:	e8 30       	cpi	r30, 0x08	; 8
 c40:	19 f1       	breq	.+70     	; 0xc88 <analogWrite+0x9c>
 c42:	e4 30       	cpi	r30, 0x04	; 4
 c44:	49 f5       	brne	.+82     	; 0xc98 <analogWrite+0xac>
 c46:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
 c4a:	80 62       	ori	r24, 0x20	; 32
 c4c:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
 c50:	d0 93 8b 00 	sts	0x008B, r29	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
 c54:	c0 93 8a 00 	sts	0x008A, r28	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
 c58:	24 c0       	rjmp	.+72     	; 0xca2 <analogWrite+0xb6>
 c5a:	84 b5       	in	r24, 0x24	; 36
 c5c:	80 68       	ori	r24, 0x80	; 128
 c5e:	84 bd       	out	0x24, r24	; 36
 c60:	c7 bd       	out	0x27, r28	; 39
 c62:	1f c0       	rjmp	.+62     	; 0xca2 <analogWrite+0xb6>
 c64:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
 c68:	80 68       	ori	r24, 0x80	; 128
 c6a:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
 c6e:	d0 93 89 00 	sts	0x0089, r29	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 c72:	c0 93 88 00 	sts	0x0088, r28	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 c76:	15 c0       	rjmp	.+42     	; 0xca2 <analogWrite+0xb6>
 c78:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
 c7c:	80 68       	ori	r24, 0x80	; 128
 c7e:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
 c82:	c0 93 b3 00 	sts	0x00B3, r28	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
 c86:	0d c0       	rjmp	.+26     	; 0xca2 <analogWrite+0xb6>
 c88:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
 c8c:	80 62       	ori	r24, 0x20	; 32
 c8e:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
 c92:	c0 93 b4 00 	sts	0x00B4, r28	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
 c96:	05 c0       	rjmp	.+10     	; 0xca2 <analogWrite+0xb6>
 c98:	c0 38       	cpi	r28, 0x80	; 128
 c9a:	d1 05       	cpc	r29, r1
 c9c:	0c f0       	brlt	.+2      	; 0xca0 <analogWrite+0xb4>
 c9e:	b5 cf       	rjmp	.-150    	; 0xc0a <analogWrite+0x1e>
 ca0:	af cf       	rjmp	.-162    	; 0xc00 <analogWrite+0x14>
 ca2:	df 91       	pop	r29
 ca4:	cf 91       	pop	r28
 ca6:	1f 91       	pop	r17
 ca8:	08 95       	ret

00000caa <turnOffPWM>:
 caa:	83 30       	cpi	r24, 0x03	; 3
 cac:	81 f0       	breq	.+32     	; 0xcce <turnOffPWM+0x24>
 cae:	28 f4       	brcc	.+10     	; 0xcba <turnOffPWM+0x10>
 cb0:	81 30       	cpi	r24, 0x01	; 1
 cb2:	99 f0       	breq	.+38     	; 0xcda <turnOffPWM+0x30>
 cb4:	82 30       	cpi	r24, 0x02	; 2
 cb6:	a1 f0       	breq	.+40     	; 0xce0 <turnOffPWM+0x36>
 cb8:	08 95       	ret
 cba:	87 30       	cpi	r24, 0x07	; 7
 cbc:	a9 f0       	breq	.+42     	; 0xce8 <turnOffPWM+0x3e>
 cbe:	88 30       	cpi	r24, 0x08	; 8
 cc0:	b9 f0       	breq	.+46     	; 0xcf0 <turnOffPWM+0x46>
 cc2:	84 30       	cpi	r24, 0x04	; 4
 cc4:	d1 f4       	brne	.+52     	; 0xcfa <turnOffPWM+0x50>
 cc6:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
 cca:	8f 7d       	andi	r24, 0xDF	; 223
 ccc:	03 c0       	rjmp	.+6      	; 0xcd4 <turnOffPWM+0x2a>
 cce:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
 cd2:	8f 77       	andi	r24, 0x7F	; 127
 cd4:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
 cd8:	08 95       	ret
 cda:	84 b5       	in	r24, 0x24	; 36
 cdc:	8f 77       	andi	r24, 0x7F	; 127
 cde:	02 c0       	rjmp	.+4      	; 0xce4 <turnOffPWM+0x3a>
 ce0:	84 b5       	in	r24, 0x24	; 36
 ce2:	8f 7d       	andi	r24, 0xDF	; 223
 ce4:	84 bd       	out	0x24, r24	; 36
 ce6:	08 95       	ret
 ce8:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
 cec:	8f 77       	andi	r24, 0x7F	; 127
 cee:	03 c0       	rjmp	.+6      	; 0xcf6 <turnOffPWM+0x4c>
 cf0:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
 cf4:	8f 7d       	andi	r24, 0xDF	; 223
 cf6:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
 cfa:	08 95       	ret

00000cfc <pinMode>:
 cfc:	cf 93       	push	r28
 cfe:	df 93       	push	r29
 d00:	90 e0       	ldi	r25, 0x00	; 0
 d02:	fc 01       	movw	r30, r24
 d04:	e4 58       	subi	r30, 0x84	; 132
 d06:	ff 4f       	sbci	r31, 0xFF	; 255
 d08:	24 91       	lpm	r18, Z
 d0a:	fc 01       	movw	r30, r24
 d0c:	e0 57       	subi	r30, 0x70	; 112
 d0e:	ff 4f       	sbci	r31, 0xFF	; 255
 d10:	84 91       	lpm	r24, Z
 d12:	88 23       	and	r24, r24
 d14:	61 f1       	breq	.+88     	; 0xd6e <pinMode+0x72>
 d16:	90 e0       	ldi	r25, 0x00	; 0
 d18:	88 0f       	add	r24, r24
 d1a:	99 1f       	adc	r25, r25
 d1c:	fc 01       	movw	r30, r24
 d1e:	e2 55       	subi	r30, 0x52	; 82
 d20:	ff 4f       	sbci	r31, 0xFF	; 255
 d22:	c5 91       	lpm	r28, Z+
 d24:	d4 91       	lpm	r29, Z
 d26:	fc 01       	movw	r30, r24
 d28:	ec 55       	subi	r30, 0x5C	; 92
 d2a:	ff 4f       	sbci	r31, 0xFF	; 255
 d2c:	a5 91       	lpm	r26, Z+
 d2e:	b4 91       	lpm	r27, Z
 d30:	61 11       	cpse	r22, r1
 d32:	09 c0       	rjmp	.+18     	; 0xd46 <pinMode+0x4a>
 d34:	9f b7       	in	r25, 0x3f	; 63
 d36:	f8 94       	cli
 d38:	88 81       	ld	r24, Y
 d3a:	20 95       	com	r18
 d3c:	82 23       	and	r24, r18
 d3e:	88 83       	st	Y, r24
 d40:	ec 91       	ld	r30, X
 d42:	2e 23       	and	r18, r30
 d44:	0b c0       	rjmp	.+22     	; 0xd5c <pinMode+0x60>
 d46:	62 30       	cpi	r22, 0x02	; 2
 d48:	61 f4       	brne	.+24     	; 0xd62 <pinMode+0x66>
 d4a:	9f b7       	in	r25, 0x3f	; 63
 d4c:	f8 94       	cli
 d4e:	88 81       	ld	r24, Y
 d50:	32 2f       	mov	r19, r18
 d52:	30 95       	com	r19
 d54:	83 23       	and	r24, r19
 d56:	88 83       	st	Y, r24
 d58:	ec 91       	ld	r30, X
 d5a:	2e 2b       	or	r18, r30
 d5c:	2c 93       	st	X, r18
 d5e:	9f bf       	out	0x3f, r25	; 63
 d60:	06 c0       	rjmp	.+12     	; 0xd6e <pinMode+0x72>
 d62:	8f b7       	in	r24, 0x3f	; 63
 d64:	f8 94       	cli
 d66:	e8 81       	ld	r30, Y
 d68:	2e 2b       	or	r18, r30
 d6a:	28 83       	st	Y, r18
 d6c:	8f bf       	out	0x3f, r24	; 63
 d6e:	df 91       	pop	r29
 d70:	cf 91       	pop	r28
 d72:	08 95       	ret

00000d74 <digitalWrite>:
 d74:	1f 93       	push	r17
 d76:	cf 93       	push	r28
 d78:	df 93       	push	r29
 d7a:	28 2f       	mov	r18, r24
 d7c:	30 e0       	ldi	r19, 0x00	; 0
 d7e:	f9 01       	movw	r30, r18
 d80:	e8 59       	subi	r30, 0x98	; 152
 d82:	ff 4f       	sbci	r31, 0xFF	; 255
 d84:	84 91       	lpm	r24, Z
 d86:	f9 01       	movw	r30, r18
 d88:	e4 58       	subi	r30, 0x84	; 132
 d8a:	ff 4f       	sbci	r31, 0xFF	; 255
 d8c:	d4 91       	lpm	r29, Z
 d8e:	f9 01       	movw	r30, r18
 d90:	e0 57       	subi	r30, 0x70	; 112
 d92:	ff 4f       	sbci	r31, 0xFF	; 255
 d94:	c4 91       	lpm	r28, Z
 d96:	cc 23       	and	r28, r28
 d98:	c1 f0       	breq	.+48     	; 0xdca <digitalWrite+0x56>
 d9a:	16 2f       	mov	r17, r22
 d9c:	81 11       	cpse	r24, r1
 d9e:	0e 94 55 06 	call	0xcaa	; 0xcaa <turnOffPWM>
 da2:	ec 2f       	mov	r30, r28
 da4:	f0 e0       	ldi	r31, 0x00	; 0
 da6:	ee 0f       	add	r30, r30
 da8:	ff 1f       	adc	r31, r31
 daa:	ec 55       	subi	r30, 0x5C	; 92
 dac:	ff 4f       	sbci	r31, 0xFF	; 255
 dae:	a5 91       	lpm	r26, Z+
 db0:	b4 91       	lpm	r27, Z
 db2:	9f b7       	in	r25, 0x3f	; 63
 db4:	f8 94       	cli
 db6:	11 11       	cpse	r17, r1
 db8:	04 c0       	rjmp	.+8      	; 0xdc2 <digitalWrite+0x4e>
 dba:	8c 91       	ld	r24, X
 dbc:	d0 95       	com	r29
 dbe:	d8 23       	and	r29, r24
 dc0:	02 c0       	rjmp	.+4      	; 0xdc6 <digitalWrite+0x52>
 dc2:	ec 91       	ld	r30, X
 dc4:	de 2b       	or	r29, r30
 dc6:	dc 93       	st	X, r29
 dc8:	9f bf       	out	0x3f, r25	; 63
 dca:	df 91       	pop	r29
 dcc:	cf 91       	pop	r28
 dce:	1f 91       	pop	r17
 dd0:	08 95       	ret

00000dd2 <yield>:
 dd2:	08 95       	ret

00000dd4 <__tablejump2__>:
 dd4:	ee 0f       	add	r30, r30
 dd6:	ff 1f       	adc	r31, r31
 dd8:	05 90       	lpm	r0, Z+
 dda:	f4 91       	lpm	r31, Z
 ddc:	e0 2d       	mov	r30, r0
 dde:	09 94       	ijmp

00000de0 <_exit>:
 de0:	f8 94       	cli

00000de2 <__stop_program>:
 de2:	ff cf       	rjmp	.-2      	; 0xde2 <__stop_program>
